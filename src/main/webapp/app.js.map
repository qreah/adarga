{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/numeral/numeral.js","src/scripts/app.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","global","factory","this","numeral","_","decimal","binary","unformatRegex","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","options","Numeral","input","number","_input","_value","value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","regexps","unformat","match","stringToNumber","Number","version","obj","numberToFormat","format","roundingFunction","leadingCount","abbrForce","abs","int","precision","signed","thousands","output","locale","negP","optDec","abbr","trillion","neg","Math","includes","indexOf","RegExp","abbreviations","billion","million","thousand","toString","split","toFixed","delimiters","slice","String","string","abbreviation","stringOriginal","currency","symbol","pow","min","search","insert","subString","start","reduce","array","callback","TypeError","Object","len","k","arguments","multiplier","x","parts","correctionFactor","Array","prototype","accum","next","mn","maxDecimals","optionals","boundedPrecision","optionalsRegExp","power","splitValue","minDecimals","max","key","toLowerCase","localeData","reset","property","register","type","name","validate","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","console","warn","trim","substr","fn","clone","inputString","formatFunction","round","set","add","corrFactor","curr","currI","O","subtract","multiply","divide","difference","ordinal","b","space","splice","join","base","suffixes","concat","filter","item","bytes","suffix","bytesMultiplier","symbols","before","after","toExponential","hours","floor","minutes","seconds","timeArray","define","amd","Item","lastYear","json","ly","keyFR","hasOwnProperty","$","document","ready","log","click","company","getElementById","get","data","style","visibility","bodyOM","removeChild","bodyIM","bodyFM","bodyCM","bodyGM","fr","JSON","parse","itemNameOM","itemNumbersOM","OM","revenue","salesGrowth","COGS","operatingIncome","grossMargin","SGA","SGAOverSales","NOPAT","NOPATGrowth","NOPATMargin","taxRate","netIncome","incomeOverRevenue","operatingCashFlowOverIncome","body","createElement","setAttribute","appendChild","lastyear","innerHTML","parseInt","j","th","createTextNode","td","tr","itemPaint2","itemPaint","convertido","toLocaleString","undefined","minimumFractionDigits","thi","tdi","id","table","thead","itenName","tHeader","noChar","tHeader2","tbody","yeariS","year","tdYear","tdValue","itemNameIM","itemNumbersIM","IM","accountsReceivableGrowth","inventoryGrowth","accountsReceivableOverSales","inventorySales","daysReceivables","daysInventory","daysPayables","salesOverWorkingCapital","salesOverNetLTAssets","salesOverNetAssets","cashOverNetAssets","cashOverReceivables","cashAndMarketableSecurities","itemNameFM","itemNumbersFM","FM","debtToCapitalRatio","netDebtToNetCapitalRatio","spread","netFinancialLeverage","financialLeverage","currentRatio","quickRatio","cashRatio","interestCoverage_operatingIncomeVSinterestexpense","interestCoverage_operatingCashFlowVSinterestexpense","equity","itemNameCM","itemNumbersCM","CM","operatingCashFlow","ChangeOperatingCashFlow","investingCashFlow","ChangeInvestingCashFlow","CAPEX","changeInCAPEX","adquisitions","changeInAdquisitions","securitiesNet","changeInSecurities","investing","changeInInvesting","FCF","changeInFCF","dividends","changeInDividends","stockRepurchase","changeInStockRepurchase","debtRepayment","changeInDebtRepayment","itemNameGM","itemNumbersGM","GM","operatingROA","salesOverAssets","financialLeverageGain","ROE","returnOnTangibleEquity","payOut","dividendYield","FCFOverEquity","FCFPerShare","earningsPerShare","operatingIncomePerShare","growthRate","salesGrowthRate","beginningNetOperatingWCOverSales","beginningNetOperatingLTAssetsOverSales","beginningNetDebt2CapitalRatio","afterTaxCostOfDebt"],"mappings":"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","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(this, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n","//import $ from \"jquery\";\n\n\nclass FinancialResults {\n\n\tCM: CashManagement = new CashManagement();\n\tFM: FinancialManagement = new FinancialManagement();\n\tGM: GlobalManagement = new GlobalManagement();\n\tIM: InvestmentManagement = new InvestmentManagement();\n\tOM: OperatingManagement = new OperatingManagement();\n}\n\nclass CashManagement {\n\toperatingCashFlow: Item = new Item(new ItemElements);\n\tChangeOperatingCashFlow: Item  = new Item(new ItemElements);\n\tinvestingCashFlow: Item = new Item(new ItemElements);\n\tChangeInvestingCashFlow: Item = new Item(new ItemElements);\n\tCAPEX: Item = new Item(new ItemElements);\n\tchangeInCAPEX: Item = new Item(new ItemElements);\n\tadquisitions: Item = new Item(new ItemElements);\n\tchangeInAdquisitions: Item = new Item(new ItemElements);\n\tsecuritiesNet: Item = new Item(new ItemElements);\n\tchangeInSecurities: Item = new Item(new ItemElements);\n\tfinancingCashFlow: Item = new Item(new ItemElements);\n\tinvesting: Item = new Item(new ItemElements); \n\tchangeInInvesting: Item = new Item(new ItemElements);\n\tFCF: Item = new Item(new ItemElements);\n\tchangeInFCF: Item = new Item(new ItemElements);\n\tdividends: Item = new Item(new ItemElements);\n\tchangeInDividends: Item = new Item(new ItemElements);\n\tstockRepurchase: Item = new Item(new ItemElements);\n\tchangeInStockRepurchase: Item = new Item(new ItemElements);\n\tdebtRepayment: Item = new Item(new ItemElements);\n\tchangeInDebtRepayment: Item = new Item(new ItemElements);\n\n}\n\nclass FinancialManagement {\n\tnetInterestEarningsAfterTaxes: Item = new Item(new ItemElements);\n\tlongTermDebt: Item = new Item(new ItemElements);\n\tnetDebt: Item = new Item(new ItemElements);\n\tequity: Item = new Item(new ItemElements);\n\tdebtToCapitalRatio: Item = new Item(new ItemElements);\n\tnetDebtToNetCapitalRatio: Item = new Item(new ItemElements);\n\tspread: Item = new Item(new ItemElements);\n\tnetFinancialLeverage: Item = new Item(new ItemElements);\n\tfinancialLeverage: Item = new Item(new ItemElements);\n\tcurrentRatio: Item = new Item(new ItemElements);\n\tquickRatio: Item = new Item(new ItemElements);\n\tcashRatio: Item = new Item(new ItemElements);\n\tinterestCoverage_operatingIncomeVSinterestexpense: Item = new Item(new ItemElements);\n\tinterestCoverage_operatingCashFlowVSinterestexpense: Item = new Item(new ItemElements);\n\t\n}\n\nclass GlobalManagement {\n\toperatingROA: Item = new Item(new ItemElements);\n\tsalesOverAssets: Item = new Item(new ItemElements);\n\t\n\tfinancialLeverageGain: Item = new Item(new ItemElements);\n\tROE: Item = new Item(new ItemElements);\n\treturnOnTangibleEquity: Item = new Item(new ItemElements);\n\tpayOut: Item = new Item(new ItemElements);\n\tdividendYield: Item = new Item(new ItemElements);\n\tFCFOverEquity: Item = new Item(new ItemElements);\n\tFCFPerShare: Item = new Item(new ItemElements);\n\tearningsPerShare: Item = new Item(new ItemElements);\n\toperatingIncomePerShare: Item = new Item(new ItemElements);\n\tgrowthRate: Item = new Item(new ItemElements);\n\t\n\tsalesGrowthRate: Item = new Item(new ItemElements);\n\tNOPATMargin: Item = new Item(new ItemElements);\n\tbeginningNetOperatingWCOverSales: Item = new Item(new ItemElements);\n\tbeginningNetOperatingLTAssetsOverSales: Item = new Item(new ItemElements);\n\tbeginningNetDebt2CapitalRatio: Item = new Item(new ItemElements);\n\tafterTaxCostOfDebt: Item = new Item(new ItemElements);\n}\n\nclass InvestmentManagement {\n\tLTAssets: Item = new Item(new ItemElements);\n\taccountsPayable: Item = new Item(new ItemElements);\n\taccountsPayableSales: Item = new Item(new ItemElements);\n\taccountsReceivable: Item = new Item(new ItemElements);\n\taccountsReceivableGrowth: Item = new Item(new ItemElements);\n\taccountsReceivableOverSales: Item = new Item(new ItemElements);\n\tcashAndMarketableSecurities: Item = new Item(new ItemElements);\n\tcashOverNetAssets: Item = new Item(new ItemElements);\n\tcashOverReceivables: Item = new Item(new ItemElements);\n\tcurrentAssets: Item = new Item(new ItemElements);\n\tcurrentLiabilities: Item = new Item(new ItemElements);\n\tdaysInventory: Item = new Item(new ItemElements);\n\tdaysPayables: Item = new Item(new ItemElements);\n\tdaysReceivables: Item = new Item(new ItemElements);\n\tgoodwillAndIntangibles: Item = new Item(new ItemElements);\n\tinventory: Item = new Item(new ItemElements);\n\tinventoryGrowth: Item = new Item(new ItemElements);\n\tinventorySales: Item = new Item(new ItemElements);\n\tlongTermDebt: Item = new Item(new ItemElements);\n\tnetAssets: Item = new Item(new ItemElements);\n\tnetLTAssets: Item = new Item(new ItemElements);\n\tnetWorkingCapital: Item = new Item(new ItemElements);\n\tnonInterestBearingLTLiabilities: Item = new Item(new ItemElements);\n\tsalesOverNetAssets: Item = new Item(new ItemElements);\n\tsalesOverNetLTAssets: Item = new Item(new ItemElements);\n\tsalesOverWorkingCapital: Item = new Item(new ItemElements);\n\tshortTermDebtAndCurrentPortionOfLongTermDebt: Item = new Item(new ItemElements);\n}\n\nclass OperatingManagement {\n\trevenue: Item = new Item(new ItemElements);\n\tsalesGrowth: Item = new Item(new ItemElements);\n\tCOGS: Item = new Item(new ItemElements);\n\toperatingIncome: Item = new Item(new ItemElements);\n\tgrossMargin: Item = new Item(new ItemElements);\n\tSGA: Item = new Item(new ItemElements);\n\tSGAOverSales: Item = new Item(new ItemElements);\n\tNOPAT: Item = new Item(new ItemElements);\n\tNOPATGrowth: Item = new Item(new ItemElements);\n\tNOPATMargin: Item = new Item(new ItemElements);\n\toperatingMargin: Item = new Item(new ItemElements);\n\tprovisionForIncomeTaxes: Item = new Item(new ItemElements);\n\ttaxRate: Item = new Item(new ItemElements); \n\tinterestExpense: Item = new Item(new ItemElements);\n\tnetIncome: Item = new Item(new ItemElements);\n\tincomeOverRevenue: Item = new Item(new ItemElements);\n\toperatingCashFlow: Item = new Item(new ItemElements);\n\toperatingCashFlowOverIncome: Item = new Item(new ItemElements);\n\n\n}\n\n\nclass Item {\n\tconstructor(item: ItemElements){\n\t\tthis.item = item;\n\t}\n\n\t\n\titem: ItemElements;\n\t\n\n\tlength() {\n\t\t\n\t\treturn 5;\n\t}\n\n\t\n\n}\n\nclass ItemElements {\n\n\tconstructor(){\n\t\t\n\t}\n\n\titem1: number = 0; \n\titem2: number = 0; \n\titem3: number = 0; \n\titem4: number = 0; \n\titem5: number = 0; \n\n\t\n}\n\nfunction lastYear(json: Item): string {\n\tvar ly: string = \"\";\n\t\tfor (var keyFR in json) {\n\t\t  if (json.hasOwnProperty(keyFR)) {\n\t\t  \tly = keyFR;\n\t\t  }\n\t\t}\n\t\treturn ly;\n}\n\n\n//import * as numeral from '../../node_modules/numeral/numeral';\n\n\n\n$(document).ready(function(){\n\tconsole.log(\"Hola\");\n  $(\"#analizar\").click(function(){\n\n  \tvar company = (<HTMLInputElement>document.getElementById(\"company\")).value;\n  \tconsole.log(company);\n\n  \t$.get(\"https://api.adarga.org/analysis?com=\" + company, function(data){\n  \tconsole.log(data.toString());\n\n  \t/***********************\n\t\n\t\t\tConstruct the HTML code needed\n\n    \t*/\n\n  \tvar OM = <HTMLElement>document.getElementById(\"OM\");\n  \tOM.style.visibility = \"visible\";\n\n  \tvar bodyOM = <HTMLElement>document.getElementById(\"tbodyOM\");\n  \tvar tableOM = <HTMLElement>document.getElementById(\"tableOM\");\n  \ttableOM.removeChild(bodyOM);\n\n\n  \t/**\n\n\t\tMOBILE\n\n  \t*/\n\n  \tvar OMM = <HTMLElement>document.getElementById(\"OMM\");\n  \tOMM.style.visibility = \"visible\";\n\n  \tvar IMM = <HTMLElement>document.getElementById(\"IMM\");\n  \tIMM.style.visibility = \"visible\";\n\n  \tvar FMM = <HTMLElement>document.getElementById(\"FMM\");\n  \tFMM.style.visibility = \"visible\";\n\n  \tvar CMM = <HTMLElement>document.getElementById(\"CMM\");\n  \tCMM.style.visibility = \"visible\";\n\n  \tvar GMM = <HTMLElement>document.getElementById(\"GMM\");\n  \tGMM.style.visibility = \"visible\";\n  \t\n\n  \t/**\n\n\t\tDESKTOP\n\n  \t*/\n\n  \tvar IM = <HTMLElement>document.getElementById(\"IM\");\n  \tIM.style.visibility = \"visible\";\n\n  \tvar bodyIM = <HTMLElement>document.getElementById(\"tbodyIM\");\n  \tvar tableIM = <HTMLElement>document.getElementById(\"tableIM\");\n  \ttableIM.removeChild(bodyIM);\n  \t\n  \tvar FM = <HTMLElement>document.getElementById(\"FM\");\n  \tFM.style.visibility = \"visible\";\n\n  \tvar bodyFM = <HTMLElement>document.getElementById(\"tbodyFM\");\n  \tvar tableFM = <HTMLElement>document.getElementById(\"tableFM\");\n  \ttableFM.removeChild(bodyFM);\n\n  \tvar CM = <HTMLElement>document.getElementById(\"CM\");\n  \tCM.style.visibility = \"visible\";\n\n  \tvar bodyCM = <HTMLElement>document.getElementById(\"tbodyCM\");\n  \tvar tableCM = <HTMLElement>document.getElementById(\"tableCM\");\n  \ttableCM.removeChild(bodyCM);\n\n  \tvar GM = <HTMLElement>document.getElementById(\"GM\");\n  \tGM.style.visibility = \"visible\";\n\n  \tvar bodyGM = <HTMLElement>document.getElementById(\"tbodyGM\");\n  \tvar tableGM = <HTMLElement>document.getElementById(\"tableGM\");\n  \ttableGM.removeChild(bodyGM);\n\n\n\n\n  \t\n\n    \n    \t\n    \tlet fr: FinancialResults = JSON.parse(data);\n    \tconsole.log(fr);\n    \t\n    \t//require('typescript-require');\n\t\tvar numeral = require('../../node_modules/numeral/numeral');\n\n\n    \t\n    \t/***********************\n\t\n\t\t\tOperating Management\n\n    \t*/\n\n\t    var itemNameOM = [\"Revenue\",\n\t    \t\t\"Sales Growth\",\n\t    \t\t\"COGs\",\n\t    \t\t\"Operating Income\",\n\t    \t\t\"Gross Margin\",\n\t    \t\t\"SGA\",\n\t    \t\t\"SGA Growth\",\n\t    \t\t\"NOPAT\",\n\t    \t\t\"NOPAT Growth\",\n\t    \t\t\"NOPAT Margin\",\n\t    \t\t\"Tax Rate\",\n\t    \t\t\"Net Income\",\n\t    \t\t\"Income Over Revenue\",\n\t    \t\t\"Operating Cash Flow Over Income\"\n\n\t    \t];\n\n\t    var itemNumbersOM = [fr.OM.revenue,\n\t    \t\tfr.OM.salesGrowth,\n\t    \t\tfr.OM.COGS,\n\t    \t\tfr.OM.operatingIncome,\n\t    \t\tfr.OM.grossMargin,\n\t    \t\tfr.OM.SGA,\n\t    \t\tfr.OM.SGAOverSales,\n\t    \t\tfr.OM.NOPAT,\n\t    \t\tfr.OM.NOPATGrowth,\n\t    \t\tfr.OM.NOPATMargin,\n\t    \t\tfr.OM.taxRate,\n\t    \t\tfr.OM.netIncome,\n\t    \t\tfr.OM.incomeOverRevenue,\n\t    \t\tfr.OM.operatingCashFlowOverIncome\n\t    \t];\n\n\t    var body = <HTMLElement>document.createElement(\"tbody\");\n\t    body.setAttribute(\"id\", \"tbodyOM\");\n\t    var dummy = <HTMLElement>document.getElementById(\"tableOM\");\n\t    dummy.appendChild(body);\n\t    var lastyear: string = lastYear(fr.OM.revenue);\n\t\t\n\t\tvar col_1OM = <HTMLElement>document.getElementById(\"col_1OM\");\n\t\tcol_1OM.innerHTML = String(lastyear);\n\t\tvar col_2OM = <HTMLElement>document.getElementById(\"col_2OM\");\n\t\tcol_2OM.innerHTML = String(parseInt(lastyear)- 1);\n\t\tvar col_3OM = <HTMLElement>document.getElementById(\"col_3OM\");\n\t\tcol_3OM.innerHTML = String(parseInt(lastyear) -2);\n\t\tvar col_4OM = <HTMLElement>document.getElementById(\"col_4OM\");\n\t\tcol_4OM.innerHTML = String(parseInt(lastyear) -3);\n\t\tvar col_5OM = <HTMLElement>document.getElementById(\"col_5OM\");\n\t\tcol_5OM.innerHTML = String(parseInt(lastyear) -4);\n\n\t\t//  itemNumbersOM\n\n\t    for (var j=0; j<itemNumbersOM.length; j++) {\n\t    \t\n\t    \tvar th = document.createElement(\"th\").appendChild(document.createTextNode(itemNameOM[j])); \n\t\t    var td = document.createElement(\"td\");\n\t\t    var tr = document.createElement(\"tr\");\n\t\t    td.appendChild(th);\n\t\t    tr.appendChild(td);\n\n\t\t    \n\t\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\n\t\t    \tvar convertido;\n\t\t    \tvar itemPaint2: any = itemNumbersOM[j];\n\t\t  \t\tconsole.log(\"itemPaint2\");\n\t\t  \t\tconsole.log(itemPaint2);\n\t\t  \t\tvar itemPaint = itemPaint2[parseInt(lastyear) - i];\n\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2});\n\t\t  \t\t\tconsole.log(\"itemPaint\");\n\t\t  \t\t\tconsole.log(itemPaint);\n\t\t  \t\t\tif (itemNameOM[j] == \"Operating Income\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameOM[j] == \"NOPAT\") { convertido = numeral(itemPaint).format('0,0'); }\n\n\t\t\t    \t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t    \tvar thi = document.createElement(\"th\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdi = document.createElement(\"td\");\n\t\t    \ttdi.id = itemNameOM[j] + i;\n\t\t    \ttdi.appendChild(thi);\n\t\t\t\ttr.appendChild(tdi);\n\t\t\t\t\n\t\t    }\n\t\t    var dummy3 = <HTMLElement>document.getElementById(\"tbodyOM\");\n\t\t    dummy3.appendChild(tr);\n\t    }\n\n\n\t    /**\n\n\t\t\tMOBILE Operating Management\n\n  \t\t*/\n\n\n\t    for (var j=0; j<itemNumbersOM.length; j++) {\n\n\t    \t// Creating table and the header\n\t    \tvar id = <HTMLElement>document.createElement(\"id\");\n\t    \tid.setAttribute(\"class\", \"table-responsive table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar table = <HTMLElement>document.createElement(\"table\");\n\t    \ttable.setAttribute(\"class\", \"table table-hover table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar thead = <HTMLElement>document.createElement(\"thead\");\n\t    \tthead.setAttribute(\"class\", \"thead-dark\");\n\t    \tvar tr = document.createElement(\"tr\");\n\t    \ttr.setAttribute(\"scope\", \"col\");\n\t    \tvar itenName = document.createElement(\"th\").appendChild(document.createTextNode(itemNameOM[j])); \n\t    \tvar tHeader = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader.setAttribute(\"scope\", \"col\");\n\t    \ttHeader.appendChild(itenName);\n\t    \tvar noChar = document.createElement(\"th\").appendChild(document.createTextNode(\"          \")); \n\t    \tvar tHeader2 = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader2.setAttribute(\"scope\", \"col\");\n\t    \ttHeader2.appendChild(noChar);\n\n\t    \ttr.appendChild(tHeader);\n\t    \ttr.appendChild(tHeader2);\n\t    \tthead.appendChild(tr);\n\t    \ttable.appendChild(thead);\n\t    \tid.appendChild(table);\n\n\n\t    \t// Creating rows of the table per year\n\n\t    \tvar tbody = <HTMLElement>document.createElement(\"tbody\");\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\n\t\t    \tvar convertido;\n\t\t  \t\tvar itemPaint2: any = itemNumbersOM[j];\n\t\t  \t\tvar itemPaint = itemPaint2[parseInt(lastyear) - i];\n\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2});\n\t\t  \t\t\tif (itemNameOM[j] == \"Operating Income\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameOM[j] == \"NOPAT\") { convertido = numeral(itemPaint).format('0,0'); }\n\t\t  \t\t\t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t\t    var yeari = parseInt(lastyear) - i;\n\t\t\t    var yeariS = yeari.toString();\n\t\t\t    var year = document.createElement(\"td\").appendChild(document.createTextNode(yeariS));\n\t\t\t    var tdYear = document.createElement(\"td\");\n\t\t\t    tdYear.appendChild(year);\n\n\t\t    \tvar value = document.createElement(\"td\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdValue = document.createElement(\"td\");\n\t\t\t    tdValue.appendChild(value);\n\n\t\t    \tvar tr = document.createElement(\"tr\");\n\t\t    \ttr.appendChild(tdYear);\n\t\t    \ttr.appendChild(tdValue);\n\t\t\t\ttbody.appendChild(tr);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t    }\n\t\t    \n\t\t    table.appendChild(tbody);\n\t\t    var dummy10 = <HTMLElement>document.getElementById(\"OMM\");\n\t\t    dummy10.appendChild(table);\n\n\t\t}\n\n\t    /***********************\n\t\n\t\t\tInvestment Management\n\n    \t*/\n\n\t    var itemNameIM = [\"Accounts Receivable Growth\",\n\t    \t\t\"Inventory Growth\",\n\t    \t\t\"Accounts Receivable Over Sales\",\n\t    \t\t\"Inventory Over Sales\",\n\t    \t\t\"Days Receivables\",\n\t    \t\t\"Days Inventory\",\n\t    \t\t\"Days Payables\",\n\t    \t\t\"Sales Over Working Capital\",\n\t    \t\t\"Sales Over Net LTAssets\",\n\t    \t\t\"Sales Over Net Assets\",\n\t    \t\t\"Cash Over NetAssets\",\n\t    \t\t\"Cash Over Receivables\",\n\t    \t];\n\n\t    var itemNumbersIM = [fr.IM.accountsReceivableGrowth,\n\t    \t\tfr.IM.inventoryGrowth,\n\t    \t\tfr.IM.accountsReceivableOverSales,\n\t    \t\tfr.IM.inventorySales,\n\t    \t\tfr.IM.daysReceivables,\n\t    \t\tfr.IM.daysInventory,\n\t    \t\tfr.IM.daysPayables,\n\t    \t\tfr.IM.salesOverWorkingCapital,\n\t    \t\tfr.IM.salesOverNetLTAssets,\n\t    \t\tfr.IM.salesOverNetAssets,\n\t    \t\tfr.IM.cashOverNetAssets,\n\t    \t\tfr.IM.cashOverReceivables,\n\t    \t];\n\n\t    var bodyIM = <HTMLElement>document.createElement(\"tbody\");\n\t    bodyIM.setAttribute(\"id\", \"tbodyIM\");\n\t    var dummy2 = <HTMLElement>document.getElementById(\"tableIM\");\n\t    dummy2.appendChild(bodyIM);\n\t    var lastyear: string = lastYear(fr.IM.cashAndMarketableSecurities);\n\t\t\n\t\tvar col_1IM = <HTMLElement>document.getElementById(\"col_1IM\");\n\t\tcol_1IM.innerHTML = String(lastyear);\n\t\tvar col_2IM = <HTMLElement>document.getElementById(\"col_2IM\");\n\t\tcol_2IM.innerHTML = String(parseInt(lastyear) -1);\n\t\tvar col_3IM = <HTMLElement>document.getElementById(\"col_3IM\");\n\t\tcol_3IM.innerHTML = String(parseInt(lastyear) -2);\n\t\tvar col_4IM = <HTMLElement>document.getElementById(\"col_4IM\");\n\t\tcol_4IM.innerHTML = String(parseInt(lastyear) -3);\n\t\tvar col_5IM = <HTMLElement>document.getElementById(\"col_5IM\");\n\t\tcol_5IM.innerHTML = String(parseInt(lastyear) -4);\n\n\n\t    for (var j=0; j<itemNumbersIM.length; j++) {\n\t    \t\n\t    \tvar th = document.createElement(\"th\").appendChild(document.createTextNode(itemNameIM[j])); \n\t\t    var td = document.createElement(\"td\");\n\t\t    var tr = document.createElement(\"tr\");\n\t\t    td.appendChild(th);\n\t\t    tr.appendChild(td);\n\n\t\t    \n\t\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\t\t    \tvar convertido;\n\t\t  \t\tvar itemPaint2: any = itemNumbersIM[j];\n\t\t  \t\titemPaint = itemPaint2[parseInt(lastyear) - i];\n\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\t\t  \t\t\t\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2});\n\t\t  \t\t\t\n\t\t  \t\t\tif (itemNameIM[j] == \"Days Receivables\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameIM[j] == \"Days Inventory\") { convertido = numeral(itemPaint).format('0,0'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Days Payables\") { convertido = numeral(itemPaint).format('0,0'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Sales Over Working Capital\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Sales Over Net LTAssets\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Sales Over Net Assets\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\n\t\t\t    \t\t\n\t\t\t    \t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\t\t\t    \n\n\t\t    \tvar thi = document.createElement(\"th\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdi = document.createElement(\"td\");\n\t\t    \ttdi.id = itemNameIM[j] + i;\n\t\t    \ttdi.appendChild(thi);\n\t\t\t\ttr.appendChild(tdi);\n\t\t\t\t\n\t\t    }\n\t\t    var dummy4 = <HTMLElement>document.getElementById(\"tbodyIM\");\n\t\t    dummy4.appendChild(tr);\n\t    }\n\n\n\t    /**\n\n\t\t\tMOBILE Investment Management\n\n  \t\t*/\n\n\n\t    for (var j=0; j<itemNumbersIM.length; j++) {\n\n\t    \t// Creating table and the header\n\t    \tvar id = <HTMLElement>document.createElement(\"id\");\n\t    \tid.setAttribute(\"class\", \"table-responsive table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar table = <HTMLElement>document.createElement(\"table\");\n\t    \ttable.setAttribute(\"class\", \"table table-hover table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar thead = <HTMLElement>document.createElement(\"thead\");\n\t    \tthead.setAttribute(\"class\", \"thead-dark\");\n\t    \tvar tr = document.createElement(\"tr\");\n\t    \ttr.setAttribute(\"scope\", \"col\");\n\t    \tvar itenName = document.createElement(\"th\").appendChild(document.createTextNode(itemNameIM[j])); \n\t    \tvar tHeader = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader.setAttribute(\"scope\", \"col\");\n\t    \ttHeader.appendChild(itenName);\n\t    \tvar noChar = document.createElement(\"th\").appendChild(document.createTextNode(\"          \")); \n\t    \tvar tHeader2 = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader2.setAttribute(\"scope\", \"col\");\n\t    \ttHeader2.appendChild(noChar);\n\n\t    \ttr.appendChild(tHeader);\n\t    \ttr.appendChild(tHeader2);\n\t    \tthead.appendChild(tr);\n\t    \ttable.appendChild(thead);\n\t    \tid.appendChild(table);\n\n\n\t    \t// Creating rows of the table per year\n\n\t    \tvar tbody = <HTMLElement>document.createElement(\"tbody\");\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\n\t\t    \tvar convertido;\n\t\t  \t\tvar itemPaint2: any = itemNumbersIM[j];\n\t\t  \t\tvar itemPaint = itemPaint2[parseInt(lastyear) - i];\n\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2});\n\t\t  \t\t\tif (itemNameIM[j] == \"Days Receivables\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameIM[j] == \"Days Inventory\") { convertido = numeral(itemPaint).format('0,0'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Days Payables\") { convertido = numeral(itemPaint).format('0,0'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Sales Over Working Capital\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Sales Over Net LTAssets\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Sales Over Net Assets\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t\t    var yeari = parseInt(lastyear) - i;\n\t\t\t    var yeariS = yeari.toString();\n\t\t\t    var year = document.createElement(\"td\").appendChild(document.createTextNode(yeariS));\n\t\t\t    var tdYear = document.createElement(\"td\");\n\t\t\t    tdYear.appendChild(year);\n\n\t\t    \tvar value = document.createElement(\"td\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdValue = document.createElement(\"td\");\n\t\t\t    tdValue.appendChild(value);\n\n\t\t    \tvar tr = document.createElement(\"tr\");\n\t\t    \ttr.appendChild(tdYear);\n\t\t    \ttr.appendChild(tdValue);\n\t\t\t\ttbody.appendChild(tr);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t    }\n\t\t    \n\t\t    table.appendChild(tbody);\n\t\t    var dummy10 = <HTMLElement>document.getElementById(\"IMM\");\n\t\t    dummy10.appendChild(table);\n\n\t\t}\n\n\n\n\t    /***********************\n\t\n\t\t\tFinancial Management\n\n    \t*/\n\n\t    var itemNameFM = [\"Debt To Capital Ratio\",\n\t    \t\t\"Net Debt To Net Capital Ratio\",\n\t    \t\t\"Spread\",\n\t    \t\t\"Net Financial Leverage\",\n\t    \t\t\"Financial Leverage\",\n\t    \t\t\"Current Ratio\",\n\t    \t\t\"Quick Ratio\",\n\t    \t\t\"Cash Ratio\",\n\t    \t\t\"Operating Income vs Interest Expense\",\n\t    \t\t\"Operating Cash Flow vs Interest expense\",\n\t    \t];\n\n\t    var itemNumbersFM = [fr.FM.debtToCapitalRatio,\n\t    \t\tfr.FM.netDebtToNetCapitalRatio,\n\t    \t\tfr.FM.spread,\n\t    \t\tfr.FM.netFinancialLeverage,\n\t    \t\tfr.FM.financialLeverage,\n\t    \t\tfr.FM.currentRatio,\n\t    \t\tfr.FM.quickRatio,\n\t    \t\tfr.FM.cashRatio,\n\t    \t\tfr.FM.interestCoverage_operatingIncomeVSinterestexpense,\n\t    \t\tfr.FM.interestCoverage_operatingCashFlowVSinterestexpense,\n\t    \t\t\n\t    \t];\n\n\t    var bodyFM = <HTMLElement>document.createElement(\"tbody\");\n\t    bodyFM.setAttribute(\"id\", \"tbodyFM\");\n\t    var dummy5 = <HTMLElement>document.getElementById(\"tableFM\");\n\t    dummy5.appendChild(bodyFM);\n\t    var lastyear = lastYear(fr.FM.equity);\n\t\t\n\t\tvar col_1FM = <HTMLElement>document.getElementById(\"col_1FM\");\n\t\tcol_1FM.innerHTML = String(lastyear);\n\t\tvar col_2FM = <HTMLElement>document.getElementById(\"col_2FM\");\n\t\tcol_2FM.innerHTML = String(parseInt(lastyear) -1);\n\t\tvar col_3FM = <HTMLElement>document.getElementById(\"col_3FM\");\n\t\tcol_3FM.innerHTML = String(parseInt(lastyear) -2);\n\t\tvar col_4FM = <HTMLElement>document.getElementById(\"col_4FM\");\n\t\tcol_4FM.innerHTML = String(parseInt(lastyear) -3);\n\t\tvar col_5FM = <HTMLElement>document.getElementById(\"col_5FM\");\n\t\tcol_5FM.innerHTML = String(parseInt(lastyear) -4);\n\n\n\t    for (var j=0; j<itemNumbersFM.length; j++) {\n\t    \t\n\t    \tvar th = document.createElement(\"th\").appendChild(document.createTextNode(itemNameFM[j])); \n\t\t    var td = document.createElement(\"td\");\n\t\t    var tr = document.createElement(\"tr\");\n\t\t    td.appendChild(th);\n\t\t    tr.appendChild(td);\n\n\t\t    \n\t\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\t\t    \tvar convertido;\n\t\t  \t\tvar itemPaint2: any = itemNumbersFM[j];\n\t\t  \t\titemPaint = itemPaint2[parseInt(lastyear) - i];\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2});\n\t\t  \t\t\t\n\t\t  \t\t\tif (itemNameFM[j] == \"Current Ratio\") { convertido = numeral(itemPaint).format('0,0.00'); } \n\t\t  \t\t\tif (itemNameFM[j] == \"Quick Ratio\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameFM[j] == \"Cash Ratio\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameFM[j] == \"Operating Income vs Interest Expense\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameFM[j] == \"Operating Cash Flow vs Interest expense\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\n\t\t\t    \t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t    \tvar thi = document.createElement(\"th\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdi = document.createElement(\"td\");\n\t\t    \ttdi.id = itemNameFM[j] + i;\n\t\t    \ttdi.appendChild(thi);\n\t\t\t\ttr.appendChild(tdi);\n\t\t\t\t\n\t\t    }\n\t\t    var dummy6 = <HTMLElement>document.getElementById(\"tbodyFM\");\n\t\t    dummy6.appendChild(tr);\n\t    }\n\t    \n\t    \n\n\t     /**\n\n\t\t\tMOBILE Financial Management\n\n  \t\t*/\n\n\n\t    for (var j=0; j<itemNumbersFM.length; j++) {\n\n\t    \t// Creating table and the header\n\t    \tvar id = <HTMLElement>document.createElement(\"id\");\n\t    \tid.setAttribute(\"class\", \"table-responsive table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar table = <HTMLElement>document.createElement(\"table\");\n\t    \ttable.setAttribute(\"class\", \"table table-hover table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar thead = <HTMLElement>document.createElement(\"thead\");\n\t    \tthead.setAttribute(\"class\", \"thead-dark\");\n\t    \tvar tr = document.createElement(\"tr\");\n\t    \ttr.setAttribute(\"scope\", \"col\");\n\t    \tvar itenName = document.createElement(\"th\").appendChild(document.createTextNode(itemNameFM[j])); \n\t    \tvar tHeader = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader.setAttribute(\"scope\", \"col\");\n\t    \ttHeader.appendChild(itenName);\n\t    \tvar noChar = document.createElement(\"th\").appendChild(document.createTextNode(\"          \")); \n\t    \tvar tHeader2 = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader2.setAttribute(\"scope\", \"col\");\n\t    \ttHeader2.appendChild(noChar);\n\n\t    \ttr.appendChild(tHeader);\n\t    \ttr.appendChild(tHeader2);\n\t    \tthead.appendChild(tr);\n\t    \ttable.appendChild(thead);\n\t    \tid.appendChild(table);\n\n\n\t    \t// Creating rows of the table per year\n\n\t    \tvar tbody = <HTMLElement>document.createElement(\"tbody\");\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\n\t\t    \tvar convertido;\n\t\t  \t\tvar itemPaint2: any = itemNumbersFM[j];\n\t\t  \t\tvar itemPaint = itemPaint2[parseInt(lastyear) - i];\n\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2});\n\t\t  \t\t\tif (itemNameFM[j] == \"Current Ratio\") { convertido = numeral(itemPaint).format('0,0.00'); } \n\t\t  \t\t\tif (itemNameFM[j] == \"Quick Ratio\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameFM[j] == \"Cash Ratio\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameFM[j] == \"Operating Income vs Interest Expense\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameFM[j] == \"Operating Cash Flow vs Interest expense\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\n\t\t  \t\t\t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t\t    var yeari = parseInt(lastyear) - i;\n\t\t\t    var yeariS = yeari.toString();\n\t\t\t    var year = document.createElement(\"td\").appendChild(document.createTextNode(yeariS));\n\t\t\t    var tdYear = document.createElement(\"td\");\n\t\t\t    tdYear.appendChild(year);\n\n\t\t    \tvar value = document.createElement(\"td\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdValue = document.createElement(\"td\");\n\t\t\t    tdValue.appendChild(value);\n\n\t\t    \tvar tr = document.createElement(\"tr\");\n\t\t    \ttr.appendChild(tdYear);\n\t\t    \ttr.appendChild(tdValue);\n\t\t\t\ttbody.appendChild(tr);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t    }\n\t\t    \n\t\t    table.appendChild(tbody);\n\t\t    var dummy10 = <HTMLElement>document.getElementById(\"FMM\");\n\t\t    dummy10.appendChild(table);\n\n\t\t}\n\n\n\n\n\n\n\t     /***********************\n\t\n\t\t\tCash Management\n\n    \t*/\n\n\t    var itemNameCM = [\"Operating Cash Flow\",\n\t    \t\t\"Change Operating Cash Flow\",\n\t    \t\t\"Investing\",\n\t    \t\t\"Change Investing Cash Flow\",\n\t    \t\t\"CAPEX\",\n\t    \t\t\"Change In CAPEX\",\n\t    \t\t\"Adquisitions\",\n\t    \t\t\"Change In Adquisitions\",\n\t    \t\t\"Securities buying Net\",\n\t    \t\t\"Change In Securities\",\n\t    \t\t\"Investing (CAPEX + Adquisitions)\",\n\t    \t\t\"Change In Investing (CAPEX + Adquisitions)\",\n\t    \t\t\"FCF\",\n\t    \t\t\"Change In FCF\",\n\t    \t\t\"Dividends\",\n\t    \t\t\"Change In Dividends\",\n\t    \t\t\"Stock Repurchase Net\",\n\t    \t\t\"Change In Stock Repurchase\",\n\t    \t\t\"Debt Repayment Net\",\n\t    \t\t\"Change In Debt Repayment\",\n\t    \t];\n\n\t    var itemNumbersCM = [fr.CM.operatingCashFlow,\n\t    \t\tfr.CM.ChangeOperatingCashFlow,\n\t    \t\tfr.CM.investingCashFlow,\n\t    \t\tfr.CM.ChangeInvestingCashFlow,\n\t    \t\tfr.CM.CAPEX,\n\t    \t\tfr.CM.changeInCAPEX,\n\t    \t\tfr.CM.adquisitions,\n\t    \t\tfr.CM.changeInAdquisitions,\n\t    \t\tfr.CM.securitiesNet,\n\t    \t\tfr.CM.changeInSecurities,\n\t    \t\tfr.CM.investing,\n\t    \t\tfr.CM.changeInInvesting,\n\t    \t\tfr.CM.FCF,\n\t    \t\tfr.CM.changeInFCF,\n\t    \t\tfr.CM.dividends,\n\t    \t\tfr.CM.changeInDividends,\n\t    \t\tfr.CM.stockRepurchase,\n\t    \t\tfr.CM.changeInStockRepurchase,\n\t    \t\tfr.CM.debtRepayment,\n\t    \t\tfr.CM.changeInDebtRepayment,\n\t    \t];\n\n\t    var bodyCMM = <HTMLElement>document.createElement(\"tbody\");\n\t    bodyCM.setAttribute(\"id\", \"tbodyCM\");\n\t    var dummy7  = <HTMLElement>document.getElementById(\"tableCM\");\n\t    dummy7.appendChild(bodyCM);\n\t    var lastyear = lastYear(fr.CM.operatingCashFlow);\n\t\t\n\t\tvar col_1CM = <HTMLElement>document.getElementById(\"col_1CM\");\n\t\tcol_1CM.innerHTML = String(lastyear);\n\t\tvar col_2CM = <HTMLElement>document.getElementById(\"col_2CM\");\n\t\tcol_2CM.innerHTML = String(parseInt(lastyear) -1);\n\t\tvar col_3CM = <HTMLElement>document.getElementById(\"col_3CM\");\n\t\tcol_3CM.innerHTML = String(parseInt(lastyear) -2);\n\t\tvar col_4CM = <HTMLElement>document.getElementById(\"col_4CM\");\n\t\tcol_4CM.innerHTML = String(parseInt(lastyear) -3);\n\t\tvar col_5CM = <HTMLElement>document.getElementById(\"col_5CM\");\n\t\tcol_5CM.innerHTML = String(parseInt(lastyear) -4);\n\n\n\t    for (var j=0; j<itemNumbersCM.length; j++) {\n\t    \t\n\t    \tvar th = document.createElement(\"th\").appendChild(document.createTextNode(itemNameCM[j])); \n\t\t    var td = document.createElement(\"td\");\n\t\t    var tr = document.createElement(\"tr\");\n\t\t    td.appendChild(th);\n\t\t    tr.appendChild(td);\n\n\t\t    \n\t\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\t\t    \tvar convertido;\n\t\t  \t\tvar itemPaint4: any = itemNumbersCM[j];\n\t\t  \t\titemPaint = itemPaint4[parseInt(lastyear) - i];\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\t\t\t    \t\n\t\t\t    \tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2});\n\t\t  \t\t\t\n\t\t  \t\t\tif (itemNameCM[j] == \"CAPEX\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Securities buying Net\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Investing (CAPEX + Adquisitions)\") { convertido = numeral(itemPaint).format('0,0'); }\n\t\t  \t\t\tif (itemNameCM[j] == \"Dividends\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Stock Repurchase Net\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Debt Repayment Net\") { convertido = numeral(itemPaint).format('0,0'); } \n\n\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t    \tvar thi = document.createElement(\"th\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdi = document.createElement(\"td\");\n\t\t    \ttdi.id = itemNameCM[j] + i;\n\t\t    \ttdi.appendChild(thi);\n\t\t\t\ttr.appendChild(tdi);\n\t\t\t\t\n\t\t    }\n\t\t    var dummy8 = <HTMLElement>document.getElementById(\"tbodyCM\");\n\t\t    dummy8.appendChild(tr);\n\t    }\n\n\n\n\n\n\t     /**\n\n\t\t\tMOBILE Cash Management\n\n  \t\t*/\n\n\n\t    for (var j=0; j<itemNumbersCM.length; j++) {\n\n\t    \t// Creating table and the header\n\t    \tvar id = <HTMLElement>document.createElement(\"id\");\n\t    \tid.setAttribute(\"class\", \"table-responsive table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar table = <HTMLElement>document.createElement(\"table\");\n\t    \ttable.setAttribute(\"class\", \"table table-hover table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar thead = <HTMLElement>document.createElement(\"thead\");\n\t    \tthead.setAttribute(\"class\", \"thead-dark\");\n\t    \tvar tr = document.createElement(\"tr\");\n\t    \ttr.setAttribute(\"scope\", \"col\");\n\t    \tvar itenName = document.createElement(\"th\").appendChild(document.createTextNode(itemNameCM[j])); \n\t    \tvar tHeader = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader.setAttribute(\"scope\", \"col\");\n\t    \ttHeader.appendChild(itenName);\n\t    \tvar noChar = document.createElement(\"th\").appendChild(document.createTextNode(\"          \")); \n\t    \tvar tHeader2 = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader2.setAttribute(\"scope\", \"col\");\n\t    \ttHeader2.appendChild(noChar);\n\n\t    \ttr.appendChild(tHeader);\n\t    \ttr.appendChild(tHeader2);\n\t    \tthead.appendChild(tr);\n\t    \ttable.appendChild(thead);\n\t    \tid.appendChild(table);\n\n\n\t    \t// Creating rows of the table per year\n\n\t    \tvar tbody = <HTMLElement>document.createElement(\"tbody\");\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\n\t\t    \tvar convertido;\n\t\t  \t\tvar itemPaint2: any = itemNumbersCM[j];\n\t\t  \t\tvar itemPaint = itemPaint2[parseInt(lastyear) - i];\n\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2});\n\t\t  \t\t\tif (itemNameCM[j] == \"CAPEX\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Securities buying Net\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Investing (CAPEX + Adquisitions)\") { convertido = numeral(itemPaint).format('0,0'); }\n\t\t  \t\t\tif (itemNameCM[j] == \"Dividends\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Stock Repurchase Net\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Debt Repayment Net\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t\t    var yeari = parseInt(lastyear) - i;\n\t\t\t    var yeariS = yeari.toString();\n\t\t\t    var year = document.createElement(\"td\").appendChild(document.createTextNode(yeariS));\n\t\t\t    var tdYear = document.createElement(\"td\");\n\t\t\t    tdYear.appendChild(year);\n\n\t\t    \tvar value = document.createElement(\"td\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdValue = document.createElement(\"td\");\n\t\t\t    tdValue.appendChild(value);\n\n\t\t    \tvar tr = document.createElement(\"tr\");\n\t\t    \ttr.appendChild(tdYear);\n\t\t    \ttr.appendChild(tdValue);\n\t\t\t\ttbody.appendChild(tr);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t    }\n\t\t    \n\t\t    table.appendChild(tbody);\n\t\t    var dummy10 = <HTMLElement>document.getElementById(\"CMM\");\n\t\t    dummy10.appendChild(table);\n\n\t\t}\n\n\n\n\n\t    /***********************\n\t\n\t\t\tGlobal Management\n\n    \t*/\n\n\t    var itemNameGM = [\"Operating ROA\",\n\t    \t\t\"Sales Over Assets\",\n\t    \t\t\"Financial Leverage Gain\",\n\t    \t\t\"ROE\",\n\t    \t\t\"Return On Tangible Equity\",\n\t    \t\t\"Pay Out\",\n\t    \t\t\"Dividend Yield\",\n\t    \t\t\"FCF Over Equity\",\n\t    \t\t\"FCF Per Share\",\n\t    \t\t\"Earnings Per Share\",\n\t    \t\t\"Operating Income Per Share\",\n\t    \t\t\"Growth Rate\",\n\t    \t\t\"Sales Growth Rate\",\n\t    \t\t\"NOPAT Margin\",\n\t    \t\t\"Beginning Net Operating WC Over Sales\",\n\t    \t\t\"Beginning Net Operating LT Assets Over Sales\",\n\t    \t\t\"Beginning Net Debt 2 Capital Ratio\",\n\t    \t\t\"After TaxCost Of Debt\",\n\t    \t];\n\n\t    var itemNumbersGM = [fr.GM.operatingROA,\n\t    \t\tfr.GM.salesOverAssets,\n\t    \t\tfr.GM.financialLeverageGain,\n\t    \t\tfr.GM.ROE,\n\t    \t\tfr.GM.returnOnTangibleEquity,\n\t    \t\tfr.GM.payOut,\n\t    \t\tfr.GM.dividendYield,\n\t    \t\tfr.GM.FCFOverEquity,\n\t    \t\tfr.GM.FCFPerShare,\n\t    \t\tfr.GM.earningsPerShare,\n\t    \t\tfr.GM.operatingIncomePerShare,\n\t    \t\tfr.GM.growthRate,\n\t    \t\tfr.GM.salesGrowthRate,\n\t    \t\tfr.GM.NOPATMargin,\n\t    \t\tfr.GM.beginningNetOperatingWCOverSales,\n\t    \t\tfr.GM.beginningNetOperatingLTAssetsOverSales,\n\t    \t\tfr.GM.beginningNetDebt2CapitalRatio,\n\t    \t\tfr.GM.afterTaxCostOfDebt,\n\t    \t];\n\n\t    var bodyGM = <HTMLElement>document.createElement(\"tbody\");\n\t    bodyGM.setAttribute(\"id\", \"tbodyGM\");\n\t    var dummy9 = <HTMLElement>document.getElementById(\"tableGM\");\n\t    dummy9.appendChild(bodyGM);\n\t    var lastyear = lastYear(fr.CM.operatingCashFlow);\n\t\t\n\t\tvar col_1GM = <HTMLElement>document.getElementById(\"col_1GM\");\n\t\tcol_1GM.innerHTML = String(lastyear);\n\t\tvar col_2GM = <HTMLElement>document.getElementById(\"col_2GM\");\n\t\tcol_2GM.innerHTML = String(parseInt(lastyear) -1);\n\t\tvar col_3GM = <HTMLElement>document.getElementById(\"col_3GM\");\n\t\tcol_3GM.innerHTML = String(parseInt(lastyear) -2);\n\t\tvar col_4GM = <HTMLElement>document.getElementById(\"col_4GM\");\n\t\tcol_4GM.innerHTML = String(parseInt(lastyear) -3);\n\t\tvar col_5GM = <HTMLElement>document.getElementById(\"col_5GM\");\n\t\tcol_5GM.innerHTML = String(parseInt(lastyear) -4);\n\n\n\t    for (var j=0; j<itemNumbersGM.length; j++) {\n\t    \t\n\t    \tvar th = document.createElement(\"th\").appendChild(document.createTextNode(itemNameGM[j])); \n\t\t    var td = document.createElement(\"td\");\n\t\t    var tr = document.createElement(\"tr\");\n\t\t    td.appendChild(th);\n\t\t    tr.appendChild(td);\n\n\t\t    \n\t\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\t\t    \tvar convertido;\n\t\t  \t\tvar itemPaint5: any = itemNumbersGM[j];\n\t\t  \t\titemPaint = itemPaint5[parseInt(lastyear) - i];\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\t\t\t    \tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2});\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\n\t\t    \tvar thi = document.createElement(\"th\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdi = document.createElement(\"td\");\n\t\t    \ttdi.id = itemNameGM[j] + i;\n\t\t    \ttdi.appendChild(thi);\n\t\t\t\ttr.appendChild(tdi);\n\t\t\t\t\n\t\t    }\n\t\t    var dummy10 = <HTMLElement>document.getElementById(\"tbodyGM\");\n\t\t    dummy10.appendChild(tr);\n\t    }\n\n\n\t     /**\n\n\t\t\tMOBILE Global Management\n\n  \t\t*/\n\n\n\t    for (var j=0; j<itemNumbersGM.length; j++) {\n\n\t    \t// Creating table and the header\n\t    \tvar id = <HTMLElement>document.createElement(\"id\");\n\t    \tid.setAttribute(\"class\", \"table-responsive table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar table = <HTMLElement>document.createElement(\"table\");\n\t    \ttable.setAttribute(\"class\", \"table table-hover table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar thead = <HTMLElement>document.createElement(\"thead\");\n\t    \tthead.setAttribute(\"class\", \"thead-dark\");\n\t    \tvar tr = document.createElement(\"tr\");\n\t    \ttr.setAttribute(\"scope\", \"col\");\n\t    \tvar itenName = document.createElement(\"th\").appendChild(document.createTextNode(itemNameGM[j])); \n\t    \tvar tHeader = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader.setAttribute(\"scope\", \"col\");\n\t    \ttHeader.appendChild(itenName);\n\t    \tvar noChar = document.createElement(\"th\").appendChild(document.createTextNode(\"          \")); \n\t    \tvar tHeader2 = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader2.setAttribute(\"scope\", \"col\");\n\t    \ttHeader2.appendChild(noChar);\n\n\t    \ttr.appendChild(tHeader);\n\t    \ttr.appendChild(tHeader2);\n\t    \tthead.appendChild(tr);\n\t    \ttable.appendChild(thead);\n\t    \tid.appendChild(table);\n\n\n\t    \t// Creating rows of the table per year\n\n\t    \tvar tbody = <HTMLElement>document.createElement(\"tbody\");\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\n\t\t    \tvar convertido;\n\t\t  \t\tvar itemPaint2: any = itemNumbersGM[j];\n\t\t  \t\tvar itemPaint = itemPaint2[parseInt(lastyear) - i];\n\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2});\n\t\t  \t\t\t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t\t    \n\n\t\t\t    var yeari = parseInt(lastyear) - i;\n\t\t\t    var yeariS = yeari.toString();\n\t\t\t    var year = document.createElement(\"td\").appendChild(document.createTextNode(yeariS));\n\t\t\t    var tdYear = document.createElement(\"td\");\n\t\t\t    tdYear.appendChild(year);\n\n\t\t    \tvar value = document.createElement(\"td\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdValue = document.createElement(\"td\");\n\t\t\t    tdValue.appendChild(value);\n\n\t\t    \tvar tr = document.createElement(\"tr\");\n\t\t    \ttr.appendChild(tdYear);\n\t\t    \ttr.appendChild(tdValue);\n\t\t\t\ttbody.appendChild(tr);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t    }\n\t\t    \n\t\t    table.appendChild(tbody);\n\t\t    var dummy10 = <HTMLElement>document.getElementById(\"GMM\");\n\t\t    dummy10.appendChild(table);\n\n\t\t}\n\n\n\n\n\t    \n\t    \n\t\t\n\n\t\t\n\t\t\t\t\n\n    });\n  });\n});\n\n\n\nfunction paint() {\n\tconsole.log(\"XXXXXXX\");\n}\n\n\n\n\n\n"]}