{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/numeral/numeral.js","src/scripts/app.ts"],"names":[],"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","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(this, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n","//import $ from \"jquery\";\n\n\nclass FinancialResults {\n\n\tCM: CashManagement = new CashManagement();\n\tGM: GlobalManagement = new GlobalManagement();\n\tFM: FinancialManagement = new FinancialManagement();\n\tIM: InvestmentManagement = new InvestmentManagement();\n\tOM: OperatingManagement = new OperatingManagement();\n}\n\nclass CashManagement {\n\toperatingCashFlow: Item = new Item(new ItemElements);\n\tChangeOperatingCashFlow: Item  = new Item(new ItemElements);\n\tinvestingCashFlow: Item = new Item(new ItemElements);\n\tChangeInvestingCashFlow: Item = new Item(new ItemElements);\n\tfinancingCashFlow: Item = new Item(new ItemElements);\n\tChangeFinancingCashFlow: Item = new Item(new ItemElements);\n\tCAPEX: Item = new Item(new ItemElements);\n\tchangeInCAPEX: Item = new Item(new ItemElements);\n\tadquisitions: Item = new Item(new ItemElements);\n\tchangeInAdquisitions: Item = new Item(new ItemElements);\n\tsecuritiesNet: Item = new Item(new ItemElements);\n\tchangeInSecurities: Item = new Item(new ItemElements);\n\t\n\tinvesting: Item = new Item(new ItemElements); \n\tchangeInInvesting: Item = new Item(new ItemElements);\n\tFCF: Item = new Item(new ItemElements);\n\tchangeInFCF: Item = new Item(new ItemElements);\n\tdividends: Item = new Item(new ItemElements);\n\tchangeInDividends: Item = new Item(new ItemElements);\n\tstockRepurchase: Item = new Item(new ItemElements);\n\tchangeInStockRepurchase: Item = new Item(new ItemElements);\n\tdebtRepayment: Item = new Item(new ItemElements);\n\tchangeInDebtRepayment: Item = new Item(new ItemElements);\n\n\tFCFYield: number = null;  \n\tDividendYield: number = null;\t\t\n\tRepurchasesYield: number = null;\t\t\n\tSecuritiesSaleYield: number = null; \n\tDebtBuyingYield: number = null; \n\tCAPEXYield: number = null; \n\tAdquisitionsYield: number = null; \n\tInvestingYield: number = null;\n\n}\n\nclass FinancialManagement {\n\tnetInterestEarningsAfterTaxes: Item = new Item(new ItemElements);\n\tlongTermDebt: Item = new Item(new ItemElements);\n\tnetDebt: Item = new Item(new ItemElements);\n\tequity: Item = new Item(new ItemElements);\n\tdebtToCapitalRatio: Item = new Item(new ItemElements);\n\tnetDebtToNetCapitalRatio: Item = new Item(new ItemElements);\n\tspread: Item = new Item(new ItemElements);\n\tnetFinancialLeverage: Item = new Item(new ItemElements);\n\tfinancialLeverage: Item = new Item(new ItemElements);\n\tcurrentRatio: Item = new Item(new ItemElements);\n\tquickRatio: Item = new Item(new ItemElements);\n\tcashRatio: Item = new Item(new ItemElements);\n\tinterestCoverage_operatingIncomeVSinterestexpense: Item = new Item(new ItemElements);\n\tinterestCoverage_operatingCashFlowVSinterestexpense: Item = new Item(new ItemElements);\n\t\n}\n\nclass GlobalManagement {\n\toperatingROA: Item = new Item(new ItemElements);\n\tsalesOverAssets: Item = new Item(new ItemElements);\n\t\n\tfinancialLeverageGain: Item = new Item(new ItemElements);\n\tROE: Item = new Item(new ItemElements);\n\treturnOnTangibleEquity: Item = new Item(new ItemElements);\n\tpayOut: Item = new Item(new ItemElements);\n\tdividendYield: Item = new Item(new ItemElements);\n\tFCFOverEquity: Item = new Item(new ItemElements);\n\tFCFPerShare: Item = new Item(new ItemElements);\n\tearningsPerShare: Item = new Item(new ItemElements);\n\toperatingIncomePerShare: Item = new Item(new ItemElements);\n\tgrowthRate: Item = new Item(new ItemElements);\n\t\n\tsalesGrowthRate: Item = new Item(new ItemElements);\n\tNOPATMargin: Item = new Item(new ItemElements);\n\tbeginningNetOperatingWCOverSales: Item = new Item(new ItemElements);\n\tbeginningNetOperatingLTAssetsOverSales: Item = new Item(new ItemElements);\n\tbeginningNetDebt2CapitalRatio: Item = new Item(new ItemElements);\n\tafterTaxCostOfDebt: Item = new Item(new ItemElements);\n}\n\nclass InvestmentManagement {\n\tLTAssets: Item = new Item(new ItemElements);\n\taccountsPayable: Item = new Item(new ItemElements);\n\taccountsPayableSales: Item = new Item(new ItemElements);\n\taccountsReceivable: Item = new Item(new ItemElements);\n\taccountsReceivableGrowth: Item = new Item(new ItemElements);\n\taccountsReceivableOverSales: Item = new Item(new ItemElements);\n\tcashAndMarketableSecurities: Item = new Item(new ItemElements);\n\tcashOverNetAssets: Item = new Item(new ItemElements);\n\tcashOverReceivables: Item = new Item(new ItemElements);\n\tcurrentAssets: Item = new Item(new ItemElements);\n\tcurrentLiabilities: Item = new Item(new ItemElements);\n\tdaysInventory: Item = new Item(new ItemElements);\n\tdaysPayables: Item = new Item(new ItemElements);\n\tdaysReceivables: Item = new Item(new ItemElements);\n\tgoodwillAndIntangibles: Item = new Item(new ItemElements);\n\tinventory: Item = new Item(new ItemElements);\n\tinventoryGrowth: Item = new Item(new ItemElements);\n\tinventorySales: Item = new Item(new ItemElements);\n\tlongTermDebt: Item = new Item(new ItemElements);\n\tnetAssets: Item = new Item(new ItemElements);\n\tnetLTAssets: Item = new Item(new ItemElements);\n\tnetWorkingCapital: Item = new Item(new ItemElements);\n\tnonInterestBearingLTLiabilities: Item = new Item(new ItemElements);\n\tsalesOverNetAssets: Item = new Item(new ItemElements);\n\tsalesOverNetLTAssets: Item = new Item(new ItemElements);\n\tsalesOverWorkingCapital: Item = new Item(new ItemElements);\n\tshortTermDebtAndCurrentPortionOfLongTermDebt: Item = new Item(new ItemElements);\n}\n\nclass OperatingManagement {\n\trevenue: Item = new Item(new ItemElements);\n\tsalesGrowth: Item = new Item(new ItemElements);\n\tCOGS: Item = new Item(new ItemElements);\n\toperatingIncome: Item = new Item(new ItemElements);\n\tgrossMargin: Item = new Item(new ItemElements);\n\tSGA: Item = new Item(new ItemElements);\n\tSGAOverSales: Item = new Item(new ItemElements);\n\tNOPAT: Item = new Item(new ItemElements);\n\tNOPATGrowth: Item = new Item(new ItemElements);\n\tNOPATMargin: Item = new Item(new ItemElements);\n\toperatingMargin: Item = new Item(new ItemElements);\n\tprovisionForIncomeTaxes: Item = new Item(new ItemElements);\n\ttaxRate: Item = new Item(new ItemElements); \n\tinterestExpense: Item = new Item(new ItemElements);\n\tnetIncome: Item = new Item(new ItemElements);\n\tincomeOverRevenue: Item = new Item(new ItemElements);\n\toperatingCashFlow: Item = new Item(new ItemElements);\n\toperatingCashFlowOverIncome: Item = new Item(new ItemElements);\n\n\n}\n\n\nclass Item {\n\tconstructor(item: ItemElements){\n\t\tthis.item = item;\n\t}\n\n\t\n\titem: ItemElements;\n\t\n\n\tlength() {\n\t\t\n\t\treturn 5;\n\t}\n\n\t\n\n}\n\nclass ItemElements {\n\n\tconstructor(){\n\t\t\n\t}\n\n\titem1: number = 0; \n\titem2: number = 0; \n\titem3: number = 0; \n\titem4: number = 0; \n\titem5: number = 0; \n\n\t\n}\n\nfunction lastYear(json: Item): string {\n\tvar ly: string = \"\";\n\t\tfor (var keyFR in json) {\n\t\t  if (json.hasOwnProperty(keyFR)) {\n\t\t  \tly = keyFR;\n\t\t  }\n\t\t}\n\t\treturn ly;\n}\n\n\n//import * as numeral from '../../node_modules/numeral/numeral';\n\n\n\n$(document).ready(function(){\n\t\n  $(\"#analizar\").click(function(){\n\n  \tvar company = (<HTMLInputElement>document.getElementById(\"company\")).value;\n  \tconsole.log(company);\n\n  \t$.get(\"https://api.adarga.org/analysis?com=\" + company, function(data){\n  \t\n\n  \t/***********************\n\t\n\t\t\tConstruct the HTML code needed\n\n    \t*/\n\n  \t\n\n\n  \t/**\n\n\t\tMOBILE\n\n  \t*/\n\n  \tvar VM = <HTMLElement>document.getElementById(\"VM\");\n  \tVM.style.visibility = \"visible\";\n\n  \tvar CMM = <HTMLElement>document.getElementById(\"CMM\");\n  \tCMM.style.visibility = \"visible\";\n\n  \tvar GMM = <HTMLElement>document.getElementById(\"GMM\");\n  \tGMM.style.visibility = \"visible\";\n\n  \tvar OMM = <HTMLElement>document.getElementById(\"OMM\");\n  \tOMM.style.visibility = \"visible\";\n\n  \tvar IMM = <HTMLElement>document.getElementById(\"IMM\");\n  \tIMM.style.visibility = \"visible\";\n\n  \tvar FMM = <HTMLElement>document.getElementById(\"FMM\");\n  \tFMM.style.visibility = \"visible\";\n\n  \t\n  \t\n\n  \t/**\n\n\t\tDESKTOP\n\n  \t*/\n\n  \tvar V = <HTMLElement>document.getElementById(\"V\");\n  \tV.style.visibility = \"visible\";\n\n  \tvar bodyV = <HTMLElement>document.getElementById(\"tbodyV\");\n  \tvar tableV = <HTMLElement>document.getElementById(\"tableV\");\n  \ttableV.removeChild(bodyV);\n\n  \tvar CM = <HTMLElement>document.getElementById(\"CM\");\n  \tCM.style.visibility = \"visible\";\n\n  \tvar bodyCM = <HTMLElement>document.getElementById(\"tbodyCM\");\n  \tvar tableCM = <HTMLElement>document.getElementById(\"tableCM\");\n  \ttableCM.removeChild(bodyCM);\n\n  \tvar GM = <HTMLElement>document.getElementById(\"GM\");\n  \tGM.style.visibility = \"visible\";\n\n  \tvar bodyGM = <HTMLElement>document.getElementById(\"tbodyGM\");\n  \tvar tableGM = <HTMLElement>document.getElementById(\"tableGM\");\n  \ttableGM.removeChild(bodyGM);\n\n  \tvar OM = <HTMLElement>document.getElementById(\"OM\");\n  \tOM.style.visibility = \"visible\";\n\n  \tvar bodyOM = <HTMLElement>document.getElementById(\"tbodyOM\");\n  \tvar tableOM = <HTMLElement>document.getElementById(\"tableOM\");\n  \ttableOM.removeChild(bodyOM);\n\n  \tvar IM = <HTMLElement>document.getElementById(\"IM\");\n  \tIM.style.visibility = \"visible\";\n\n  \tvar bodyIM = <HTMLElement>document.getElementById(\"tbodyIM\");\n  \tvar tableIM = <HTMLElement>document.getElementById(\"tableIM\");\n  \ttableIM.removeChild(bodyIM);\n  \t\n  \tvar FM = <HTMLElement>document.getElementById(\"FM\");\n  \tFM.style.visibility = \"visible\";\n\n  \tvar bodyFM = <HTMLElement>document.getElementById(\"tbodyFM\");\n  \tvar tableFM = <HTMLElement>document.getElementById(\"tableFM\");\n  \ttableFM.removeChild(bodyFM);\n\n  \t\n\n\n\n\n  \t\n\n    \n    \t\n    \tlet fr: FinancialResults = JSON.parse(data);\n    \tconsole.log(fr);\n    \t\n    \t//require('typescript-require');\n\t\tvar numeral = require('../../node_modules/numeral/numeral');\n\n\n\n\t\t /***********************\n\t\n\t\t\tValuation\n\n    \t*/\n\n    \tvar itemNameV = [\"FCF Yield\",\n\t    \t\t\"Dividend Yield\",\n\t    \t\t\"Repurchases Yield\",\n\t    \t\t\"Securities Sale Yield\",\n\t    \t\t\"Debt Issuance Yield\",\n\t    \t\t\"CAPEX Yield\",\n\t    \t\t\"Adquisitions Yield\",\n\t    \t\t\"Investing Yield\",\n\t    \t];\n\n\t    var itemNumbersV = [fr.CM.FCFYield,\n\t    \t\tfr.CM.DividendYield,\n\t    \t\tfr.CM.RepurchasesYield,\n\t    \t\tfr.CM.SecuritiesSaleYield,\n\t    \t\tfr.CM.DebtBuyingYield,\n\t    \t\tfr.CM.CAPEXYield,\n\t    \t\tfr.CM.AdquisitionsYield,\n\t    \t\tfr.CM.InvestingYield,\n\t    \t\t\n\t    \t];\n\n\t    var bodyV = <HTMLElement>document.createElement(\"tbody\");\n\t    bodyV.setAttribute(\"id\", \"tbodyV\");\n\t    var dummy7  = <HTMLElement>document.getElementById(\"tableV\");\n\t    dummy7.appendChild(bodyV);\n\t    \t\t\n\t\tvar col_1V = <HTMLElement>document.getElementById(\"col_1V\");\n\t\tcol_1V.innerHTML = \"Yield\";\n\t\t\n\n\n\t    for (var j=0; j<itemNumbersV.length; j++) {\n\t    \tconsole.log(itemNameV[j]);\n\t    \tconsole.log(itemNumbersV[j]);\n\t    \tvar th = document.createElement(\"th\").appendChild(document.createTextNode(itemNameV[j])); \n\t\t    var td = document.createElement(\"td\");\n\t\t    var tr = document.createElement(\"tr\");\n\t\t    td.appendChild(th);\n\t\t    tr.appendChild(td);\n\n\t\t    var convertido: string = itemNumbersV[j].toLocaleString(undefined,{style: 'percent', minimumFractionDigits:1});\n\t\t    var thi = document.createElement(\"th\").appendChild(document.createTextNode(convertido));\n\t\t    var tdi = document.createElement(\"td\");\n\t\t    tdi.id = itemNameV[j];\n\t\t    tdi.appendChild(thi);\n\t\t\ttr.appendChild(tdi);\n\n\t\t    var dummy8 = <HTMLElement>document.getElementById(\"tbodyV\");\n\t\t    dummy8.appendChild(tr);\n\t    }\n\n\n\n\t\t /**\n\n\t\t\tMOBILE Valuation\n\n  \t\t*/\n\n\n\t    for (var j=0; j<itemNumbersV.length; j++) {\n\n\t    \t// Creating table and the header\n\t    \tvar id = <HTMLElement>document.createElement(\"id\");\n\t    \tid.setAttribute(\"class\", \"table-responsive table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar table = <HTMLElement>document.createElement(\"table\");\n\t    \ttable.setAttribute(\"class\", \"table table-hover table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar thead = <HTMLElement>document.createElement(\"thead\");\n\t    \tthead.setAttribute(\"class\", \"thead-dark\");\n\t    \tvar tr = document.createElement(\"tr\");\n\t    \ttr.setAttribute(\"scope\", \"col\");\n\t    \tvar itenName = document.createElement(\"th\").appendChild(document.createTextNode(\"\")); \n\t    \tvar tHeader = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader.setAttribute(\"scope\", \"col\");\n\t    \ttHeader.appendChild(itenName);\n\t    \tvar noChar = document.createElement(\"th\").appendChild(document.createTextNode(\"          \")); \n\t    \tvar tHeader2 = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader2.setAttribute(\"scope\", \"col\");\n\t    \ttHeader2.appendChild(noChar);\n\n\t    \ttr.appendChild(tHeader);\n\t    \ttr.appendChild(tHeader2);\n\t    \tthead.appendChild(tr);\n\t    \ttable.appendChild(thead);\n\t    \tid.appendChild(table);\n\n\n\t    \t// Creating rows of the table per year\n\n\t    \tvar tbody = <HTMLElement>document.createElement(\"tbody\");\t    \n\n\t\t    for (var j=0; j<itemNumbersV.length; j++) {\n\t    \t\n\t    \tvar th = document.createElement(\"th\").appendChild(document.createTextNode(itemNameV[j])); \n\t\t    var td = document.createElement(\"td\");\n\t\t    var tr = document.createElement(\"tr\");\n\t\t    td.appendChild(th);\n\t\t    tr.appendChild(td);\n\n\t\t    var convertido: string = itemNumbersV[j].toLocaleString(undefined,{style: 'percent', minimumFractionDigits:1});\n\t\t    var thi = document.createElement(\"th\").appendChild(document.createTextNode(convertido));\n\t\t    var tdi = document.createElement(\"td\");\n\t\t    tdi.id = itemNameV[j];\n\t\t    tdi.appendChild(thi);\n\t\t\ttr.appendChild(tdi);\n\t\t\ttbody.appendChild(tr);\n\n\t\t   \n\t    }\n\t\t    \n\t\t    table.appendChild(tbody);\n\t\t    var dummy10 = <HTMLElement>document.getElementById(\"VM\");\n\t\t    dummy10.appendChild(table);\n\n\t\t}\n\n\n\n\n\t     /***********************\n\t\n\t\t\tCash Management\n\n    \t*/\n\n\t    var itemNameCM = [\n\t    \t\t\"FCF\",\n\t    \t\t\"Change In FCF\",\n\t    \t\t\"Operating Cash Flow\",\n\t    \t\t\"Change Operating Cash Flow\",\n\t    \t\t\"Investing Cash Flow\",\n\t    \t\t\"Change Investing Cash Flow\",\n\t    \t\t\"Financing Cash Flow\",\n\t    \t\t\"Change Financing Cash Flow\",\n\t    \t\t\"CAPEX\",\n\t    \t\t\"Change In CAPEX\",\n\t    \t\t\"Adquisitions\",\n\t    \t\t\"Change In Adquisitions\",\n\t    \t\t\"CAPEX + Adquisitions\",\n\t    \t\t\"Change In CAPEX + Adquisitions\",\n\t    \t\t\"Securities Sale Net\",\n\t    \t\t\"Change In Securities\",\n\t    \t\t\"Dividends\",\n\t    \t\t\"Change In Dividends\",\n\t    \t\t\"Stock Repurchase Net\",\n\t    \t\t\"Change In Stock Repurchase\",\n\t    \t\t\"Debt Issuance Net\",\n\t    \t\t\"Change In Debt Repayment\",\n\t    \t];\n\n\t    var itemNumbersCM = [\n\t    \t\tfr.CM.FCF,\n\t    \t\tfr.CM.changeInFCF,\n\t    \t\tfr.CM.operatingCashFlow,\n\t    \t\tfr.CM.ChangeOperatingCashFlow,\n\t    \t\tfr.CM.investingCashFlow,\n\t    \t\tfr.CM.ChangeInvestingCashFlow,\n\t    \t\tfr.CM.financingCashFlow,\n\t    \t\tfr.CM.ChangeFinancingCashFlow,\n\t    \t\tfr.CM.CAPEX,\n\t    \t\tfr.CM.changeInCAPEX,\n\t    \t\tfr.CM.adquisitions,\n\t    \t\tfr.CM.changeInAdquisitions,\n\t    \t\tfr.CM.investing,\n\t    \t\tfr.CM.changeInInvesting,\n\t    \t\tfr.CM.securitiesNet,\n\t    \t\tfr.CM.changeInSecurities,\n\t    \t\tfr.CM.dividends,\n\t    \t\tfr.CM.changeInDividends,\n\t    \t\tfr.CM.stockRepurchase,\n\t    \t\tfr.CM.changeInStockRepurchase,\n\t    \t\tfr.CM.debtRepayment,\n\t    \t\tfr.CM.changeInDebtRepayment,\n\t    \t];\n\n\t    var bodyCMM = <HTMLElement>document.createElement(\"tbody\");\n\t    bodyCM.setAttribute(\"id\", \"tbodyCM\");\n\t    var dummy7  = <HTMLElement>document.getElementById(\"tableCM\");\n\t    dummy7.appendChild(bodyCM);\n\t    var lastyear = lastYear(fr.CM.operatingCashFlow);\n\t\t\n\t\tvar col_1CM = <HTMLElement>document.getElementById(\"col_1CM\");\n\t\tcol_1CM.innerHTML = String(lastyear);\n\t\tvar col_2CM = <HTMLElement>document.getElementById(\"col_2CM\");\n\t\tcol_2CM.innerHTML = String(parseInt(lastyear) -1);\n\t\tvar col_3CM = <HTMLElement>document.getElementById(\"col_3CM\");\n\t\tcol_3CM.innerHTML = String(parseInt(lastyear) -2);\n\t\tvar col_4CM = <HTMLElement>document.getElementById(\"col_4CM\");\n\t\tcol_4CM.innerHTML = String(parseInt(lastyear) -3);\n\t\tvar col_5CM = <HTMLElement>document.getElementById(\"col_5CM\");\n\t\tcol_5CM.innerHTML = String(parseInt(lastyear) -4);\n\n\n\t    for (var j=0; j<itemNumbersCM.length; j++) {\n\t    \t\n\t    \tvar th = document.createElement(\"th\").appendChild(document.createTextNode(itemNameCM[j])); \n\t\t    var td = document.createElement(\"td\");\n\t\t    var tr = document.createElement(\"tr\");\n\t\t    td.appendChild(th);\n\t\t    tr.appendChild(td);\n\n\t\t    \n\t\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\t\t    \tvar convertido: string;\n\t\t  \t\tvar itemPaint4: any = itemNumbersCM[j];\n\t\t  \t\titemPaint = itemPaint4[parseInt(lastyear) - i];\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\t\t\t    \t\n\t\t\t    \tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:1});\n\t\t  \t\t\t\n\t\t  \t\t\tif (itemNameCM[j] == \"CAPEX\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Securities Sale Net\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Adquisitions\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"CAPEX + Adquisitions\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Investing (CAPEX + Adquisitions)\") { convertido = numeral(itemPaint).format('0,0'); }\n\t\t  \t\t\tif (itemNameCM[j] == \"Dividends\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Stock Repurchase Net\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Debt Issuance Net\") { convertido = numeral(itemPaint).format('0,0'); } \n\n\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t    \tvar thi = document.createElement(\"th\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdi = document.createElement(\"td\");\n\t\t    \ttdi.id = itemNameCM[j] + i;\n\t\t    \ttdi.appendChild(thi);\n\t\t\t\ttr.appendChild(tdi);\n\t\t\t\t\n\t\t    }\n\t\t    var dummy8 = <HTMLElement>document.getElementById(\"tbodyCM\");\n\t\t    dummy8.appendChild(tr);\n\t    }\n\n\n\n\t\t /**\n\n\t\t\tMOBILE Cash Management\n\n  \t\t*/\n\n\n\t    for (var j=0; j<itemNumbersCM.length; j++) {\n\n\t    \t// Creating table and the header\n\t    \tvar id = <HTMLElement>document.createElement(\"id\");\n\t    \tid.setAttribute(\"class\", \"table-responsive table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar table = <HTMLElement>document.createElement(\"table\");\n\t    \ttable.setAttribute(\"class\", \"table table-hover table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar thead = <HTMLElement>document.createElement(\"thead\");\n\t    \tthead.setAttribute(\"class\", \"thead-dark\");\n\t    \tvar tr = document.createElement(\"tr\");\n\t    \ttr.setAttribute(\"scope\", \"col\");\n\t    \tvar itenName = document.createElement(\"th\").appendChild(document.createTextNode(itemNameCM[j])); \n\t    \tvar tHeader = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader.setAttribute(\"scope\", \"col\");\n\t    \ttHeader.appendChild(itenName);\n\t    \tvar noChar = document.createElement(\"th\").appendChild(document.createTextNode(\"          \")); \n\t    \tvar tHeader2 = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader2.setAttribute(\"scope\", \"col\");\n\t    \ttHeader2.appendChild(noChar);\n\n\t    \ttr.appendChild(tHeader);\n\t    \ttr.appendChild(tHeader2);\n\t    \tthead.appendChild(tr);\n\t    \ttable.appendChild(thead);\n\t    \tid.appendChild(table);\n\n\n\t    \t// Creating rows of the table per year\n\n\t    \tvar tbody = <HTMLElement>document.createElement(\"tbody\");\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\n\t\t    \tvar convertido: string;\n\t\t  \t\tvar itemPaint2: any = itemNumbersCM[j];\n\t\t  \t\tvar itemPaint = itemPaint2[parseInt(lastyear) - i];\n\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:1});\n\t\t  \t\t\tif (itemNameCM[j] == \"CAPEX\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Adquisitions\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"CAPEX + Adquisitions\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Securities Sale Net\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Investing (CAPEX + Adquisitions)\") { convertido = numeral(itemPaint).format('0,0'); }\n\t\t  \t\t\tif (itemNameCM[j] == \"Dividends\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Stock Repurchase Net\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameCM[j] == \"Debt Issuance Net\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t\t    \n\n\t\t\t    var yeari = parseInt(lastyear) - i;\n\t\t\t    var yeariS = yeari.toString();\n\t\t\t    var year = document.createElement(\"td\").appendChild(document.createTextNode(yeariS));\n\t\t\t    var tdYear = document.createElement(\"td\");\n\t\t\t    tdYear.appendChild(year);\n\n\t\t    \tvar value = document.createElement(\"td\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdValue = document.createElement(\"td\");\n\t\t\t    tdValue.appendChild(value);\n\n\t\t    \tvar tr = document.createElement(\"tr\");\n\t\t    \ttr.appendChild(tdYear);\n\t\t    \ttr.appendChild(tdValue);\n\t\t\t\ttbody.appendChild(tr);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t    }\n\t\t    \n\t\t    table.appendChild(tbody);\n\t\t    var dummy10 = <HTMLElement>document.getElementById(\"CMM\");\n\t\t    dummy10.appendChild(table);\n\n\t\t}\n\n\n\n\n\n\n\t    /***********************\n\t\n\t\t\tGlobal Management\n\n    \t*/\n\n\t    var itemNameGM = [\"Operating ROA\",\n\t    \t\t\"Sales Over Assets\",\n\t    \t\t\"Financial Leverage Gain\",\n\t    \t\t\"ROE\",\n\t    \t\t\"Return On Tangible Equity\",\n\t    \t\t\"Pay Out\",\n\t    \t\t\"Dividend Yield\",\n\t    \t\t\"FCF Over Equity\",\n\t    \t\t\"FCF Per Share\",\n\t    \t\t\"Earnings Per Share\",\n\t    \t\t\"Operating Income Per Share\",\n\t    \t\t\"Growth Rate\",\n\t    \t\t\"Sales Growth Rate\",\n\t    \t\t\"NOPAT Margin\",\n\t    \t\t\"Beginning Net Operating WC Over Sales\",\n\t    \t\t\"Beginning Net Operating LT Assets Over Sales\",\n\t    \t\t\"Beginning Net Debt 2 Capital Ratio\",\n\t    \t\t\"After TaxCost Of Debt\",\n\t    \t];\n\n\t    var itemNumbersGM = [fr.GM.operatingROA,\n\t    \t\tfr.GM.salesOverAssets,\n\t    \t\tfr.GM.financialLeverageGain,\n\t    \t\tfr.GM.ROE,\n\t    \t\tfr.GM.returnOnTangibleEquity,\n\t    \t\tfr.GM.payOut,\n\t    \t\tfr.GM.dividendYield,\n\t    \t\tfr.GM.FCFOverEquity,\n\t    \t\tfr.GM.FCFPerShare,\n\t    \t\tfr.GM.earningsPerShare,\n\t    \t\tfr.GM.operatingIncomePerShare,\n\t    \t\tfr.GM.growthRate,\n\t    \t\tfr.GM.salesGrowthRate,\n\t    \t\tfr.GM.NOPATMargin,\n\t    \t\tfr.GM.beginningNetOperatingWCOverSales,\n\t    \t\tfr.GM.beginningNetOperatingLTAssetsOverSales,\n\t    \t\tfr.GM.beginningNetDebt2CapitalRatio,\n\t    \t\tfr.GM.afterTaxCostOfDebt,\n\t    \t];\n\n\t    var bodyGM = <HTMLElement>document.createElement(\"tbody\");\n\t    bodyGM.setAttribute(\"id\", \"tbodyGM\");\n\t    var dummy9 = <HTMLElement>document.getElementById(\"tableGM\");\n\t    dummy9.appendChild(bodyGM);\n\t    var lastyear = lastYear(fr.CM.operatingCashFlow);\n\t\t\n\t\tvar col_1GM = <HTMLElement>document.getElementById(\"col_1GM\");\n\t\tcol_1GM.innerHTML = String(lastyear);\n\t\tvar col_2GM = <HTMLElement>document.getElementById(\"col_2GM\");\n\t\tcol_2GM.innerHTML = String(parseInt(lastyear) -1);\n\t\tvar col_3GM = <HTMLElement>document.getElementById(\"col_3GM\");\n\t\tcol_3GM.innerHTML = String(parseInt(lastyear) -2);\n\t\tvar col_4GM = <HTMLElement>document.getElementById(\"col_4GM\");\n\t\tcol_4GM.innerHTML = String(parseInt(lastyear) -3);\n\t\tvar col_5GM = <HTMLElement>document.getElementById(\"col_5GM\");\n\t\tcol_5GM.innerHTML = String(parseInt(lastyear) -4);\n\n\n\t    for (var j=0; j<itemNumbersGM.length; j++) {\n\t    \t\n\t    \tvar th = document.createElement(\"th\").appendChild(document.createTextNode(itemNameGM[j])); \n\t\t    var td = document.createElement(\"td\");\n\t\t    var tr = document.createElement(\"tr\");\n\t\t    td.appendChild(th);\n\t\t    tr.appendChild(td);\n\n\t\t    \n\t\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\t\t    \tvar convertido: string;\n\t\t  \t\tvar itemPaint5: any = itemNumbersGM[j];\n\t\t  \t\titemPaint = itemPaint5[parseInt(lastyear) - i];\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\t\t\t    \tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:1});\n\t\t\t    \tif (itemNameGM[j] == \"FCF Per Share\") { convertido = numeral(itemPaint).format('0,0.00'); } \n\t\t\t    \tif (itemNameGM[j] == \"Earnings Per Share\") { convertido = numeral(itemPaint).format('0,0.00'); } \n\t\t\t    \tif (itemNameGM[j] == \"Operating Income Per Share\") { convertido = numeral(itemPaint).format('0,0.00'); } \n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\n\t\t    \tvar thi = document.createElement(\"th\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdi = document.createElement(\"td\");\n\t\t    \ttdi.id = itemNameGM[j] + i;\n\t\t    \ttdi.appendChild(thi);\n\t\t\t\ttr.appendChild(tdi);\n\t\t\t\t\n\t\t    }\n\t\t    var dummy10 = <HTMLElement>document.getElementById(\"tbodyGM\");\n\t\t    dummy10.appendChild(tr);\n\t    }\n\n\n\t     /**\n\n\t\t\tMOBILE Global Management\n\n  \t\t*/\n\n\n\t    for (var j=0; j<itemNumbersGM.length; j++) {\n\n\t    \t// Creating table and the header\n\t    \tvar id = <HTMLElement>document.createElement(\"id\");\n\t    \tid.setAttribute(\"class\", \"table-responsive table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar table = <HTMLElement>document.createElement(\"table\");\n\t    \ttable.setAttribute(\"class\", \"table table-hover table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar thead = <HTMLElement>document.createElement(\"thead\");\n\t    \tthead.setAttribute(\"class\", \"thead-dark\");\n\t    \tvar tr = document.createElement(\"tr\");\n\t    \ttr.setAttribute(\"scope\", \"col\");\n\t    \tvar itenName = document.createElement(\"th\").appendChild(document.createTextNode(itemNameGM[j])); \n\t    \tvar tHeader = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader.setAttribute(\"scope\", \"col\");\n\t    \ttHeader.appendChild(itenName);\n\t    \tvar noChar = document.createElement(\"th\").appendChild(document.createTextNode(\"          \")); \n\t    \tvar tHeader2 = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader2.setAttribute(\"scope\", \"col\");\n\t    \ttHeader2.appendChild(noChar);\n\n\t    \ttr.appendChild(tHeader);\n\t    \ttr.appendChild(tHeader2);\n\t    \tthead.appendChild(tr);\n\t    \ttable.appendChild(thead);\n\t    \tid.appendChild(table);\n\n\n\t    \t// Creating rows of the table per year\n\n\t    \tvar tbody = <HTMLElement>document.createElement(\"tbody\");\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\n\t\t    \tvar convertido: string;\n\t\t  \t\tvar itemPaint2: any = itemNumbersGM[j];\n\t\t  \t\tvar itemPaint = itemPaint2[parseInt(lastyear) - i];\n\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:1});\n\t\t  \t\t\tif (itemNameGM[j] == \"FCF Per Share\") { convertido = numeral(itemPaint).format('0,0.00'); } \n\t\t\t    \tif (itemNameGM[j] == \"Earnings Per Share\") { convertido = numeral(itemPaint).format('0,0.00'); } \n\t\t\t    \tif (itemNameGM[j] == \"Operating Income Per Share\") { convertido = numeral(itemPaint).format('0,0.00'); } \n\t\t  \t\t\t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t\t    \n\n\t\t\t    var yeari = parseInt(lastyear) - i;\n\t\t\t    var yeariS = yeari.toString();\n\t\t\t    var year = document.createElement(\"td\").appendChild(document.createTextNode(yeariS));\n\t\t\t    var tdYear = document.createElement(\"td\");\n\t\t\t    tdYear.appendChild(year);\n\n\t\t    \tvar value = document.createElement(\"td\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdValue = document.createElement(\"td\");\n\t\t\t    tdValue.appendChild(value);\n\n\t\t    \tvar tr = document.createElement(\"tr\");\n\t\t    \ttr.appendChild(tdYear);\n\t\t    \ttr.appendChild(tdValue);\n\t\t\t\ttbody.appendChild(tr);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t    }\n\t\t    \n\t\t    table.appendChild(tbody);\n\t\t    var dummy10 = <HTMLElement>document.getElementById(\"GMM\");\n\t\t    dummy10.appendChild(table);\n\n\t\t}\n\n\n    \t\n    \t/***********************\n\t\n\t\t\tOperating Management\n\n    \t*/\n\n\t    var itemNameOM = [\"Revenue\",\n\t    \t\t\"Sales Growth\",\n\t    \t\t\"COGs\",\n\t    \t\t\"Operating Income\",\n\t    \t\t\"Gross Margin\",\n\t    \t\t\"SGA\",\n\t    \t\t\"SGA Growth\",\n\t    \t\t\"NOPAT\",\n\t    \t\t\"NOPAT Growth\",\n\t    \t\t\"NOPAT Margin\",\n\t    \t\t\"Tax Rate\",\n\t    \t\t\"Net Income\",\n\t    \t\t\"Income Over Revenue\",\n\t    \t\t\"Operating Cash Flow Over Income\"\n\n\t    \t];\n\n\t    var itemNumbersOM = [fr.OM.revenue,\n\t    \t\tfr.OM.salesGrowth,\n\t    \t\tfr.OM.COGS,\n\t    \t\tfr.OM.operatingIncome,\n\t    \t\tfr.OM.grossMargin,\n\t    \t\tfr.OM.SGA,\n\t    \t\tfr.OM.SGAOverSales,\n\t    \t\tfr.OM.NOPAT,\n\t    \t\tfr.OM.NOPATGrowth,\n\t    \t\tfr.OM.NOPATMargin,\n\t    \t\tfr.OM.taxRate,\n\t    \t\tfr.OM.netIncome,\n\t    \t\tfr.OM.incomeOverRevenue,\n\t    \t\tfr.OM.operatingCashFlowOverIncome\n\t    \t];\n\n\t    var body = <HTMLElement>document.createElement(\"tbody\");\n\t    body.setAttribute(\"id\", \"tbodyOM\");\n\t    var dummy = <HTMLElement>document.getElementById(\"tableOM\");\n\t    dummy.appendChild(body);\n\t    var lastyear: string = lastYear(fr.OM.revenue);\n\t\t\n\t\tvar col_1OM = <HTMLElement>document.getElementById(\"col_1OM\");\n\t\tcol_1OM.innerHTML = String(lastyear);\n\t\tvar col_2OM = <HTMLElement>document.getElementById(\"col_2OM\");\n\t\tcol_2OM.innerHTML = String(parseInt(lastyear)- 1);\n\t\tvar col_3OM = <HTMLElement>document.getElementById(\"col_3OM\");\n\t\tcol_3OM.innerHTML = String(parseInt(lastyear) -2);\n\t\tvar col_4OM = <HTMLElement>document.getElementById(\"col_4OM\");\n\t\tcol_4OM.innerHTML = String(parseInt(lastyear) -3);\n\t\tvar col_5OM = <HTMLElement>document.getElementById(\"col_5OM\");\n\t\tcol_5OM.innerHTML = String(parseInt(lastyear) -4);\n\n\t\t//  itemNumbersOM\n\n\t    for (var j=0; j<itemNumbersOM.length; j++) {\n\t    \t\n\t    \tvar th = document.createElement(\"th\").appendChild(document.createTextNode(itemNameOM[j])); \n\t\t    var td = document.createElement(\"td\");\n\t\t    var tr = document.createElement(\"tr\");\n\t\t    td.appendChild(th);\n\t\t    tr.appendChild(td);\n\n\t\t    \n\t\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\n\t\t    \tvar convertido: string;\n\t\t    \tvar itemPaint2: any = itemNumbersOM[j];\n\t\t  \t\tconsole.log(\"itemPaint2\");\n\t\t  \t\tconsole.log(itemPaint2);\n\t\t  \t\tvar itemPaint = itemPaint2[parseInt(lastyear) - i];\n\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:1});\n\t\t  \t\t\t\n\t\t  \t\t\tif (itemNameOM[j] == \"Operating Income\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameOM[j] == \"NOPAT\") { convertido = numeral(itemPaint).format('0,0'); }\n\n\t\t\t    \t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t    \tvar thi = document.createElement(\"th\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdi = document.createElement(\"td\");\n\t\t    \ttdi.id = itemNameOM[j] + i;\n\t\t    \ttdi.appendChild(thi);\n\t\t\t\ttr.appendChild(tdi);\n\t\t\t\t\n\t\t    }\n\t\t    var dummy3 = <HTMLElement>document.getElementById(\"tbodyOM\");\n\t\t    dummy3.appendChild(tr);\n\t    }\n\n\n\t    /**\n\n\t\t\tMOBILE Operating Management\n\n  \t\t*/\n\n\n\t    for (var j=0; j<itemNumbersOM.length; j++) {\n\n\t    \t// Creating table and the header\n\t    \tvar id = <HTMLElement>document.createElement(\"id\");\n\t    \tid.setAttribute(\"class\", \"table-responsive table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar table = <HTMLElement>document.createElement(\"table\");\n\t    \ttable.setAttribute(\"class\", \"table table-hover table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar thead = <HTMLElement>document.createElement(\"thead\");\n\t    \tthead.setAttribute(\"class\", \"thead-dark\");\n\t    \tvar tr = document.createElement(\"tr\");\n\t    \ttr.setAttribute(\"scope\", \"col\");\n\t    \tvar itenName = document.createElement(\"th\").appendChild(document.createTextNode(itemNameOM[j])); \n\t    \tvar tHeader = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader.setAttribute(\"scope\", \"col\");\n\t    \ttHeader.appendChild(itenName);\n\t    \tvar noChar = document.createElement(\"th\").appendChild(document.createTextNode(\"          \")); \n\t    \tvar tHeader2 = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader2.setAttribute(\"scope\", \"col\");\n\t    \ttHeader2.appendChild(noChar);\n\n\t    \ttr.appendChild(tHeader);\n\t    \ttr.appendChild(tHeader2);\n\t    \tthead.appendChild(tr);\n\t    \ttable.appendChild(thead);\n\t    \tid.appendChild(table);\n\n\n\t    \t// Creating rows of the table per year\n\n\t    \tvar tbody = <HTMLElement>document.createElement(\"tbody\");\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\n\t\t    \tvar convertido: string;\n\t\t  \t\tvar itemPaint2: any = itemNumbersOM[j];\n\t\t  \t\tvar itemPaint = itemPaint2[parseInt(lastyear) - i];\n\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:1});\n\t\t  \t\t\tif (itemNameOM[j] == \"Operating Income\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameOM[j] == \"NOPAT\") { convertido = numeral(itemPaint).format('0,0'); }\n\t\t  \t\t\t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t\t    var yeari = parseInt(lastyear) - i;\n\t\t\t    var yeariS = yeari.toString();\n\t\t\t    var year = document.createElement(\"td\").appendChild(document.createTextNode(yeariS));\n\t\t\t    var tdYear = document.createElement(\"td\");\n\t\t\t    tdYear.appendChild(year);\n\n\t\t    \tvar value = document.createElement(\"td\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdValue = document.createElement(\"td\");\n\t\t\t    tdValue.appendChild(value);\n\n\t\t    \tvar tr = document.createElement(\"tr\");\n\t\t    \ttr.appendChild(tdYear);\n\t\t    \ttr.appendChild(tdValue);\n\t\t\t\ttbody.appendChild(tr);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t    }\n\t\t    \n\t\t    table.appendChild(tbody);\n\t\t    var dummy10 = <HTMLElement>document.getElementById(\"OMM\");\n\t\t    dummy10.appendChild(table);\n\n\t\t}\n\n\t    /***********************\n\t\n\t\t\tInvestment Management\n\n    \t*/\n\n\t    var itemNameIM = [\"Accounts Receivable Growth\",\n\t    \t\t\"Inventory Growth\",\n\t    \t\t\"Accounts Receivable Over Sales\",\n\t    \t\t\"Inventory Over Sales\",\n\t    \t\t\"Days Receivables\",\n\t    \t\t\"Days Inventory\",\n\t    \t\t\"Days Payables\",\n\t    \t\t\"Sales Over Working Capital\",\n\t    \t\t\"Sales Over Net LTAssets\",\n\t    \t\t\"Sales Over Net Assets\",\n\t    \t\t\"Cash Over NetAssets\",\n\t    \t\t\"Cash Over Receivables\",\n\t    \t];\n\n\t    var itemNumbersIM = [fr.IM.accountsReceivableGrowth,\n\t    \t\tfr.IM.inventoryGrowth,\n\t    \t\tfr.IM.accountsReceivableOverSales,\n\t    \t\tfr.IM.inventorySales,\n\t    \t\tfr.IM.daysReceivables,\n\t    \t\tfr.IM.daysInventory,\n\t    \t\tfr.IM.daysPayables,\n\t    \t\tfr.IM.salesOverWorkingCapital,\n\t    \t\tfr.IM.salesOverNetLTAssets,\n\t    \t\tfr.IM.salesOverNetAssets,\n\t    \t\tfr.IM.cashOverNetAssets,\n\t    \t\tfr.IM.cashOverReceivables,\n\t    \t];\n\n\t    var bodyIM = <HTMLElement>document.createElement(\"tbody\");\n\t    bodyIM.setAttribute(\"id\", \"tbodyIM\");\n\t    var dummy2 = <HTMLElement>document.getElementById(\"tableIM\");\n\t    dummy2.appendChild(bodyIM);\n\t    var lastyear: string = lastYear(fr.IM.cashAndMarketableSecurities);\n\t\t\n\t\tvar col_1IM = <HTMLElement>document.getElementById(\"col_1IM\");\n\t\tcol_1IM.innerHTML = String(lastyear);\n\t\tvar col_2IM = <HTMLElement>document.getElementById(\"col_2IM\");\n\t\tcol_2IM.innerHTML = String(parseInt(lastyear) -1);\n\t\tvar col_3IM = <HTMLElement>document.getElementById(\"col_3IM\");\n\t\tcol_3IM.innerHTML = String(parseInt(lastyear) -2);\n\t\tvar col_4IM = <HTMLElement>document.getElementById(\"col_4IM\");\n\t\tcol_4IM.innerHTML = String(parseInt(lastyear) -3);\n\t\tvar col_5IM = <HTMLElement>document.getElementById(\"col_5IM\");\n\t\tcol_5IM.innerHTML = String(parseInt(lastyear) -4);\n\n\n\t    for (var j=0; j<itemNumbersIM.length; j++) {\n\t    \t\n\t    \tvar th = document.createElement(\"th\").appendChild(document.createTextNode(itemNameIM[j])); \n\t\t    var td = document.createElement(\"td\");\n\t\t    var tr = document.createElement(\"tr\");\n\t\t    td.appendChild(th);\n\t\t    tr.appendChild(td);\n\n\t\t    \n\t\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\t\t    \tvar convertido: string;\n\t\t  \t\tvar itemPaint2: any = itemNumbersIM[j];\n\t\t  \t\titemPaint = itemPaint2[parseInt(lastyear) - i];\n\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\t\t  \t\t\t\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:1});\n\t\t  \t\t\t\n\t\t  \t\t\tif (itemNameIM[j] == \"Days Receivables\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameIM[j] == \"Days Inventory\") { convertido = numeral(itemPaint).format('0,0'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Days Payables\") { convertido = numeral(itemPaint).format('0,0'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Sales Over Working Capital\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Sales Over Net LTAssets\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Sales Over Net Assets\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\n\t\t\t    \t\t\n\t\t\t    \t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\t\t\t    \n\n\t\t    \tvar thi = document.createElement(\"th\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdi = document.createElement(\"td\");\n\t\t    \ttdi.id = itemNameIM[j] + i;\n\t\t    \ttdi.appendChild(thi);\n\t\t\t\ttr.appendChild(tdi);\n\t\t\t\t\n\t\t    }\n\t\t    var dummy4 = <HTMLElement>document.getElementById(\"tbodyIM\");\n\t\t    dummy4.appendChild(tr);\n\t    }\n\n\n\t    /**\n\n\t\t\tMOBILE Investment Management\n\n  \t\t*/\n\n\n\t    for (var j=0; j<itemNumbersIM.length; j++) {\n\n\t    \t// Creating table and the header\n\t    \tvar id = <HTMLElement>document.createElement(\"id\");\n\t    \tid.setAttribute(\"class\", \"table-responsive table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar table = <HTMLElement>document.createElement(\"table\");\n\t    \ttable.setAttribute(\"class\", \"table table-hover table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar thead = <HTMLElement>document.createElement(\"thead\");\n\t    \tthead.setAttribute(\"class\", \"thead-dark\");\n\t    \tvar tr = document.createElement(\"tr\");\n\t    \ttr.setAttribute(\"scope\", \"col\");\n\t    \tvar itenName = document.createElement(\"th\").appendChild(document.createTextNode(itemNameIM[j])); \n\t    \tvar tHeader = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader.setAttribute(\"scope\", \"col\");\n\t    \ttHeader.appendChild(itenName);\n\t    \tvar noChar = document.createElement(\"th\").appendChild(document.createTextNode(\"          \")); \n\t    \tvar tHeader2 = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader2.setAttribute(\"scope\", \"col\");\n\t    \ttHeader2.appendChild(noChar);\n\n\t    \ttr.appendChild(tHeader);\n\t    \ttr.appendChild(tHeader2);\n\t    \tthead.appendChild(tr);\n\t    \ttable.appendChild(thead);\n\t    \tid.appendChild(table);\n\n\n\t    \t// Creating rows of the table per year\n\n\t    \tvar tbody = <HTMLElement>document.createElement(\"tbody\");\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\n\t\t    \tvar convertido: string;\n\t\t  \t\tvar itemPaint2: any = itemNumbersIM[j];\n\t\t  \t\tvar itemPaint = itemPaint2[parseInt(lastyear) - i];\n\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:1});\n\t\t  \t\t\tif (itemNameIM[j] == \"Days Receivables\") { convertido = numeral(itemPaint).format('0,0'); } \n\t\t  \t\t\tif (itemNameIM[j] == \"Days Inventory\") { convertido = numeral(itemPaint).format('0,0'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Days Payables\") { convertido = numeral(itemPaint).format('0,0'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Sales Over Working Capital\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Sales Over Net LTAssets\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameIM[j] == \"Sales Over Net Assets\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t\t    var yeari = parseInt(lastyear) - i;\n\t\t\t    var yeariS = yeari.toString();\n\t\t\t    var year = document.createElement(\"td\").appendChild(document.createTextNode(yeariS));\n\t\t\t    var tdYear = document.createElement(\"td\");\n\t\t\t    tdYear.appendChild(year);\n\n\t\t    \tvar value = document.createElement(\"td\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdValue = document.createElement(\"td\");\n\t\t\t    tdValue.appendChild(value);\n\n\t\t    \tvar tr = document.createElement(\"tr\");\n\t\t    \ttr.appendChild(tdYear);\n\t\t    \ttr.appendChild(tdValue);\n\t\t\t\ttbody.appendChild(tr);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t    }\n\t\t    \n\t\t    table.appendChild(tbody);\n\t\t    var dummy10 = <HTMLElement>document.getElementById(\"IMM\");\n\t\t    dummy10.appendChild(table);\n\n\t\t}\n\n\n\n\t    /***********************\n\t\n\t\t\tFinancial Management\n\n    \t*/\n\n\t    var itemNameFM = [\"Debt To Capital Ratio\",\n\t    \t\t\n\t    \t\t\"Spread\",\n\t    \t\t\"Net Financial Leverage (NFL)\",\n\t    \t\t\"Financial Leverage (Spread X NFL)\",\n\t    \t\t\"Current Ratio (CA / CL)\",\n\t    \t\t\"Quick Ratio (AR + C / CL)\",\n\t    \t\t\"Cash Ratio (C / CL)\",\n\t    \t\t\"Operating Income vs Interest Expense\",\n\t    \t\t\"Operating Cash Flow vs Interest expense\",\n\t    \t];\n\n\t    var itemNumbersFM = [fr.FM.debtToCapitalRatio,\n\t    \t\t\n\t    \t\tfr.FM.spread,\n\t    \t\tfr.FM.netFinancialLeverage,\n\t    \t\tfr.FM.financialLeverage,\n\t    \t\tfr.FM.currentRatio,\n\t    \t\tfr.FM.quickRatio,\n\t    \t\tfr.FM.cashRatio,\n\t    \t\tfr.FM.interestCoverage_operatingIncomeVSinterestexpense,\n\t    \t\tfr.FM.interestCoverage_operatingCashFlowVSinterestexpense,\n\t    \t\t\n\t    \t];\n\n\t    var bodyFM = <HTMLElement>document.createElement(\"tbody\");\n\t    bodyFM.setAttribute(\"id\", \"tbodyFM\");\n\t    var dummy5 = <HTMLElement>document.getElementById(\"tableFM\");\n\t    dummy5.appendChild(bodyFM);\n\t    var lastyear = lastYear(fr.FM.equity);\n\t\t\n\t\tvar col_1FM = <HTMLElement>document.getElementById(\"col_1FM\");\n\t\tcol_1FM.innerHTML = String(lastyear);\n\t\tvar col_2FM = <HTMLElement>document.getElementById(\"col_2FM\");\n\t\tcol_2FM.innerHTML = String(parseInt(lastyear) -1);\n\t\tvar col_3FM = <HTMLElement>document.getElementById(\"col_3FM\");\n\t\tcol_3FM.innerHTML = String(parseInt(lastyear) -2);\n\t\tvar col_4FM = <HTMLElement>document.getElementById(\"col_4FM\");\n\t\tcol_4FM.innerHTML = String(parseInt(lastyear) -3);\n\t\tvar col_5FM = <HTMLElement>document.getElementById(\"col_5FM\");\n\t\tcol_5FM.innerHTML = String(parseInt(lastyear) -4);\n\n\n\t    for (var j=0; j<itemNumbersFM.length; j++) {\n\t    \t\n\t    \tvar th = document.createElement(\"th\").appendChild(document.createTextNode(itemNameFM[j])); \n\t\t    var td = document.createElement(\"td\");\n\t\t    var tr = document.createElement(\"tr\");\n\t\t    td.appendChild(th);\n\t\t    tr.appendChild(td);\n\n\t\t    \n\t\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\t\t    \tvar convertido: string;\n\t\t  \t\tvar itemPaint2: any = itemNumbersFM[j];\n\t\t  \t\titemPaint = itemPaint2[parseInt(lastyear) - i];\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:1});\n\t\t  \t\t\t\n\t\t  \t\t\tif (itemNameFM[j] == \"Current Ratio (CA / CL)\") { convertido = numeral(itemPaint).format('0,0.00'); } \n\t\t  \t\t\tif (itemNameFM[j] == \"Quick Ratio (AR + C / CL)\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameFM[j] == \"Cash Ratio (C / CL)\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameFM[j] == \"Operating Income vs Interest Expense\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameFM[j] == \"Operating Cash Flow vs Interest expense\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\n\t\t\t    \t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t    \tvar thi = document.createElement(\"th\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdi = document.createElement(\"td\");\n\t\t    \ttdi.id = itemNameFM[j] + i;\n\t\t    \ttdi.appendChild(thi);\n\t\t\t\ttr.appendChild(tdi);\n\t\t\t\t\n\t\t    }\n\t\t    var dummy6 = <HTMLElement>document.getElementById(\"tbodyFM\");\n\t\t    dummy6.appendChild(tr);\n\t    }\n\t    \n\t    \n\n\t     /**\n\n\t\t\tMOBILE Financial Management\n\n  \t\t*/\n\n\n\t    for (var j=0; j<itemNumbersFM.length; j++) {\n\n\t    \t// Creating table and the header\n\t    \tvar id = <HTMLElement>document.createElement(\"id\");\n\t    \tid.setAttribute(\"class\", \"table-responsive table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar table = <HTMLElement>document.createElement(\"table\");\n\t    \ttable.setAttribute(\"class\", \"table table-hover table-striped w-75 mx-auto\");\n\t    \t\n\t    \tvar thead = <HTMLElement>document.createElement(\"thead\");\n\t    \tthead.setAttribute(\"class\", \"thead-dark\");\n\t    \tvar tr = document.createElement(\"tr\");\n\t    \ttr.setAttribute(\"scope\", \"col\");\n\t    \tvar itenName = document.createElement(\"th\").appendChild(document.createTextNode(itemNameFM[j])); \n\t    \tvar tHeader = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader.setAttribute(\"scope\", \"col\");\n\t    \ttHeader.appendChild(itenName);\n\t    \tvar noChar = document.createElement(\"th\").appendChild(document.createTextNode(\"          \")); \n\t    \tvar tHeader2 = <HTMLTableHeaderCellElement>document.createElement(\"th\");\n\t    \ttHeader2.setAttribute(\"scope\", \"col\");\n\t    \ttHeader2.appendChild(noChar);\n\n\t    \ttr.appendChild(tHeader);\n\t    \ttr.appendChild(tHeader2);\n\t    \tthead.appendChild(tr);\n\t    \ttable.appendChild(thead);\n\t    \tid.appendChild(table);\n\n\n\t    \t// Creating rows of the table per year\n\n\t    \tvar tbody = <HTMLElement>document.createElement(\"tbody\");\t    \n\n\t\t    for (var i=0; i<5;i++) {\n\n\t\t    \tvar convertido: string;\n\t\t  \t\tvar itemPaint2: any = itemNumbersFM[j];\n\t\t  \t\tvar itemPaint = itemPaint2[parseInt(lastyear) - i];\n\n\t\t  \t\tif ((typeof itemPaint) == 'number') {\n\n\t\t  \t\t\tconvertido = itemPaint.toLocaleString(undefined,{style: 'percent', minimumFractionDigits:1});\n\t\t  \t\t\tif (itemNameFM[j] == \"Current Ratio\") { convertido = numeral(itemPaint).format('0,0.00'); } \n\t\t  \t\t\tif (itemNameFM[j] == \"Quick Ratio\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameFM[j] == \"Cash Ratio\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameFM[j] == \"Operating Income vs Interest Expense\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\t\t  \t\t\tif (itemNameFM[j] == \"Operating Cash Flow vs Interest expense\") { convertido = numeral(itemPaint).format('0,0.00'); }\n\n\t\t  \t\t\t\n\t\t\t    } else {\n\t\t\t    \tconvertido = numeral(Number(itemPaint)).format('0,0');\n\t\t\t    }\n\n\n\t\t\t    if (itemPaint > 1000000) { convertido = \"Inf\"; }\n\n\t\t\t    var yeari = parseInt(lastyear) - i;\n\t\t\t    var yeariS = yeari.toString();\n\t\t\t    var year = document.createElement(\"td\").appendChild(document.createTextNode(yeariS));\n\t\t\t    var tdYear = document.createElement(\"td\");\n\t\t\t    tdYear.appendChild(year);\n\n\t\t    \tvar value = document.createElement(\"td\").appendChild(document.createTextNode(convertido));\n\t\t    \tvar tdValue = document.createElement(\"td\");\n\t\t\t    tdValue.appendChild(value);\n\n\t\t    \tvar tr = document.createElement(\"tr\");\n\t\t    \ttr.appendChild(tdYear);\n\t\t    \ttr.appendChild(tdValue);\n\t\t\t\ttbody.appendChild(tr);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t    }\n\t\t    \n\t\t    table.appendChild(tbody);\n\t\t    var dummy10 = <HTMLElement>document.getElementById(\"FMM\");\n\t\t    dummy10.appendChild(table);\n\n\t\t}\n\n\n\n\n\n\n\n\n\n\t    \n\n\n\n\n\t    \n\t    \n\t\t\n\n\t\t\n\t\t\t\t\n\n    });\n  });\n});\n\n\n\nfunction paint() {\n\tconsole.log(\"XXXXXXX\");\n}\n\n\n\n\n\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}